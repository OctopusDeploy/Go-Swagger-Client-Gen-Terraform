// Code generated by go-swagger; DO NOT EDIT.

package artifacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateArtifactContentReader is a Reader for the UpdateArtifactContent structure.
type UpdateArtifactContentReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *UpdateArtifactContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateArtifactContentOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewUpdateArtifactContentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateArtifactContentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateArtifactContentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateArtifactContentOK creates a UpdateArtifactContentOK with default headers values
func NewUpdateArtifactContentOK(writer io.Writer) *UpdateArtifactContentOK {
	return &UpdateArtifactContentOK{
		Payload: writer,
	}
}

/*UpdateArtifactContentOK handles this case with default header values.

OK
*/
type UpdateArtifactContentOK struct {
	Payload io.Writer
}

func (o *UpdateArtifactContentOK) Error() string {
	return fmt.Sprintf("[PUT /api/artifacts/{id}/content][%d] updateArtifactContentOK  %+v", 200, o.Payload)
}

func (o *UpdateArtifactContentOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *UpdateArtifactContentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateArtifactContentNoContent creates a UpdateArtifactContentNoContent with default headers values
func NewUpdateArtifactContentNoContent() *UpdateArtifactContentNoContent {
	return &UpdateArtifactContentNoContent{}
}

/*UpdateArtifactContentNoContent handles this case with default header values.

NoContent
*/
type UpdateArtifactContentNoContent struct {
}

func (o *UpdateArtifactContentNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/artifacts/{id}/content][%d] updateArtifactContentNoContent ", 204)
}

func (o *UpdateArtifactContentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateArtifactContentBadRequest creates a UpdateArtifactContentBadRequest with default headers values
func NewUpdateArtifactContentBadRequest() *UpdateArtifactContentBadRequest {
	return &UpdateArtifactContentBadRequest{}
}

/*UpdateArtifactContentBadRequest handles this case with default header values.

No id parameter was provided.
*/
type UpdateArtifactContentBadRequest struct {
}

func (o *UpdateArtifactContentBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/artifacts/{id}/content][%d] updateArtifactContentBadRequest ", 400)
}

func (o *UpdateArtifactContentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateArtifactContentMethodNotAllowed creates a UpdateArtifactContentMethodNotAllowed with default headers values
func NewUpdateArtifactContentMethodNotAllowed() *UpdateArtifactContentMethodNotAllowed {
	return &UpdateArtifactContentMethodNotAllowed{}
}

/*UpdateArtifactContentMethodNotAllowed handles this case with default header values.

Artifact content supports GET and PUT methods only.
*/
type UpdateArtifactContentMethodNotAllowed struct {
}

func (o *UpdateArtifactContentMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/artifacts/{id}/content][%d] updateArtifactContentMethodNotAllowed ", 405)
}

func (o *UpdateArtifactContentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
