// Code generated by go-swagger; DO NOT EDIT.

package action_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// GetActionTemplatesSearchReader is a Reader for the GetActionTemplatesSearch structure.
type GetActionTemplatesSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActionTemplatesSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetActionTemplatesSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetActionTemplatesSearchOK creates a GetActionTemplatesSearchOK with default headers values
func NewGetActionTemplatesSearchOK() *GetActionTemplatesSearchOK {
	return &GetActionTemplatesSearchOK{}
}

/*GetActionTemplatesSearchOK handles this case with default header values.

IEnumerable_of_ActionTemplateSearchResource resource returned
*/
type GetActionTemplatesSearchOK struct {
	Payload []*models.ActionTemplateSearchResource
}

func (o *GetActionTemplatesSearchOK) Error() string {
	return fmt.Sprintf("[GET /api/actiontemplates/search][%d] getActionTemplatesSearchOK  %+v", 200, o.Payload)
}

func (o *GetActionTemplatesSearchOK) GetPayload() []*models.ActionTemplateSearchResource {
	return o.Payload
}

func (o *GetActionTemplatesSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
