// Code generated by go-swagger; DO NOT EDIT.

package action_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetActionTemplateLogoVersionReader is a Reader for the GetActionTemplateLogoVersion structure.
type GetActionTemplateLogoVersionReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetActionTemplateLogoVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetActionTemplateLogoVersionOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetActionTemplateLogoVersionNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetActionTemplateLogoVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetActionTemplateLogoVersionOK creates a GetActionTemplateLogoVersionOK with default headers values
func NewGetActionTemplateLogoVersionOK(writer io.Writer) *GetActionTemplateLogoVersionOK {
	return &GetActionTemplateLogoVersionOK{
		Payload: writer,
	}
}

/*GetActionTemplateLogoVersionOK handles this case with default header values.

OK
*/
type GetActionTemplateLogoVersionOK struct {
	Payload io.Writer
}

func (o *GetActionTemplateLogoVersionOK) Error() string {
	return fmt.Sprintf("[GET /api/actiontemplates/{typeOrId}/versions/{version}/logo][%d] getActionTemplateLogoVersionOK  %+v", 200, o.Payload)
}

func (o *GetActionTemplateLogoVersionOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetActionTemplateLogoVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionTemplateLogoVersionNotModified creates a GetActionTemplateLogoVersionNotModified with default headers values
func NewGetActionTemplateLogoVersionNotModified() *GetActionTemplateLogoVersionNotModified {
	return &GetActionTemplateLogoVersionNotModified{}
}

/*GetActionTemplateLogoVersionNotModified handles this case with default header values.

NotModified
*/
type GetActionTemplateLogoVersionNotModified struct {
}

func (o *GetActionTemplateLogoVersionNotModified) Error() string {
	return fmt.Sprintf("[GET /api/actiontemplates/{typeOrId}/versions/{version}/logo][%d] getActionTemplateLogoVersionNotModified ", 304)
}

func (o *GetActionTemplateLogoVersionNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActionTemplateLogoVersionBadRequest creates a GetActionTemplateLogoVersionBadRequest with default headers values
func NewGetActionTemplateLogoVersionBadRequest() *GetActionTemplateLogoVersionBadRequest {
	return &GetActionTemplateLogoVersionBadRequest{}
}

/*GetActionTemplateLogoVersionBadRequest handles this case with default header values.

No typeOrId parameter was provided.
No version parameter was provided.
*/
type GetActionTemplateLogoVersionBadRequest struct {
}

func (o *GetActionTemplateLogoVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/actiontemplates/{typeOrId}/versions/{version}/logo][%d] getActionTemplateLogoVersionBadRequest ", 400)
}

func (o *GetActionTemplateLogoVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
