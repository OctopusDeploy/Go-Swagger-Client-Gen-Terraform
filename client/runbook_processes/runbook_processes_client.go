// Code generated by go-swagger; DO NOT EDIT.

package runbook_processes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new runbook processes API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for runbook processes API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetRunbookProcessByID(params *GetRunbookProcessByIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookProcessByIDOK, error)

	GetRunbookProcessByIDSpaces(params *GetRunbookProcessByIDSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookProcessByIDSpacesOK, error)

	GetRunbookSnapshotTemplateForRunbookStep(params *GetRunbookSnapshotTemplateForRunbookStepParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookSnapshotTemplateForRunbookStepOK, error)

	GetRunbookSnapshotTemplateForRunbookStepSpaces(params *GetRunbookSnapshotTemplateForRunbookStepSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookSnapshotTemplateForRunbookStepSpacesOK, error)

	IndexRunbookProcesses(params *IndexRunbookProcessesParams, authInfo runtime.ClientAuthInfoWriter) (*IndexRunbookProcessesOK, error)

	IndexRunbookProcessesSpaces(params *IndexRunbookProcessesSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*IndexRunbookProcessesSpacesOK, error)

	UpdateRunbookProcess(params *UpdateRunbookProcessParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateRunbookProcessOK, error)

	UpdateRunbookProcessSpaces(params *UpdateRunbookProcessSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateRunbookProcessSpacesOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetRunbookProcessByID gets a runbook process resource by ID

  Gets a Runbook Process by ID.
*/
func (a *Client) GetRunbookProcessByID(params *GetRunbookProcessByIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookProcessByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbookProcessByIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbookProcessById",
		Method:             "GET",
		PathPattern:        "/api/runbookProcesses/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbookProcessByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbookProcessByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbookProcessById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRunbookProcessByIDSpaces gets a runbook process resource by ID

  Gets a Runbook Process by ID.
*/
func (a *Client) GetRunbookProcessByIDSpaces(params *GetRunbookProcessByIDSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookProcessByIDSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbookProcessByIDSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbookProcessById_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/runbookProcesses/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbookProcessByIDSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbookProcessByIDSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbookProcessById_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRunbookSnapshotTemplateForRunbookStep Gets all of the information necessary for creating or editing a Runbook Snapshot using this Runbook Process.
*/
func (a *Client) GetRunbookSnapshotTemplateForRunbookStep(params *GetRunbookSnapshotTemplateForRunbookStepParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookSnapshotTemplateForRunbookStepOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbookSnapshotTemplateForRunbookStepParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbookSnapshotTemplateForRunbookStep",
		Method:             "GET",
		PathPattern:        "/api/runbookProcesses/{id}/runbookSnapshotTemplate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbookSnapshotTemplateForRunbookStepReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbookSnapshotTemplateForRunbookStepOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbookSnapshotTemplateForRunbookStep: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRunbookSnapshotTemplateForRunbookStepSpaces Gets all of the information necessary for creating or editing a Runbook Snapshot using this Runbook Process.
*/
func (a *Client) GetRunbookSnapshotTemplateForRunbookStepSpaces(params *GetRunbookSnapshotTemplateForRunbookStepSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookSnapshotTemplateForRunbookStepSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbookSnapshotTemplateForRunbookStepSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbookSnapshotTemplateForRunbookStep_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/runbookProcesses/{id}/runbookSnapshotTemplate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbookSnapshotTemplateForRunbookStepSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbookSnapshotTemplateForRunbookStepSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbookSnapshotTemplateForRunbookStep_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  IndexRunbookProcesses gets a list of runbook process resources

  Lists all the Runbook Processes in the supplied Octopus Deploy Space, sorted by Id
*/
func (a *Client) IndexRunbookProcesses(params *IndexRunbookProcessesParams, authInfo runtime.ClientAuthInfoWriter) (*IndexRunbookProcessesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewIndexRunbookProcessesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "indexRunbookProcesses",
		Method:             "GET",
		PathPattern:        "/api/runbookProcesses",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &IndexRunbookProcessesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*IndexRunbookProcessesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for indexRunbookProcesses: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  IndexRunbookProcessesSpaces gets a list of runbook process resources

  Lists all the Runbook Processes in the supplied Octopus Deploy Space, sorted by Id
*/
func (a *Client) IndexRunbookProcessesSpaces(params *IndexRunbookProcessesSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*IndexRunbookProcessesSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewIndexRunbookProcessesSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "indexRunbookProcesses_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/runbookProcesses",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &IndexRunbookProcessesSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*IndexRunbookProcessesSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for indexRunbookProcesses_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateRunbookProcess Modifies a Runbook Process. Only allowed for Runbook Processes owned by a project.
*/
func (a *Client) UpdateRunbookProcess(params *UpdateRunbookProcessParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateRunbookProcessOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateRunbookProcessParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateRunbookProcess",
		Method:             "PUT",
		PathPattern:        "/api/runbookProcesses/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateRunbookProcessReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateRunbookProcessOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateRunbookProcess: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateRunbookProcessSpaces Modifies a Runbook Process. Only allowed for Runbook Processes owned by a project.
*/
func (a *Client) UpdateRunbookProcessSpaces(params *UpdateRunbookProcessSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateRunbookProcessSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateRunbookProcessSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateRunbookProcess_Spaces",
		Method:             "PUT",
		PathPattern:        "/api/{baseSpaceId}/runbookProcesses/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateRunbookProcessSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateRunbookProcessSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateRunbookProcess_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
