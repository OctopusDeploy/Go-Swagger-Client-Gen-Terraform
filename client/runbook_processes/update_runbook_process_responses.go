// Code generated by go-swagger; DO NOT EDIT.

package runbook_processes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// UpdateRunbookProcessReader is a Reader for the UpdateRunbookProcess structure.
type UpdateRunbookProcessReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRunbookProcessReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRunbookProcessOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRunbookProcessBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateRunbookProcessOK creates a UpdateRunbookProcessOK with default headers values
func NewUpdateRunbookProcessOK() *UpdateRunbookProcessOK {
	return &UpdateRunbookProcessOK{}
}

/*UpdateRunbookProcessOK handles this case with default header values.

RunbookProcessResource resource returned
*/
type UpdateRunbookProcessOK struct {
	Payload *models.RunbookProcessResource
}

func (o *UpdateRunbookProcessOK) Error() string {
	return fmt.Sprintf("[PUT /api/runbookProcesses/{id}][%d] updateRunbookProcessOK  %+v", 200, o.Payload)
}

func (o *UpdateRunbookProcessOK) GetPayload() *models.RunbookProcessResource {
	return o.Payload
}

func (o *UpdateRunbookProcessOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RunbookProcessResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRunbookProcessBadRequest creates a UpdateRunbookProcessBadRequest with default headers values
func NewUpdateRunbookProcessBadRequest() *UpdateRunbookProcessBadRequest {
	return &UpdateRunbookProcessBadRequest{}
}

/*UpdateRunbookProcessBadRequest handles this case with default header values.

Changes to this process could not be saved, because another user has made changes to the process between when you started editing and when you saved your changes. Please reload or open a new tab to make your changes.
No id parameter was provided.
No request body was supplied.
Validation failed.
You cannot modify this process because it is frozen. You'll need to create a new process instead.
*/
type UpdateRunbookProcessBadRequest struct {
}

func (o *UpdateRunbookProcessBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/runbookProcesses/{id}][%d] updateRunbookProcessBadRequest ", 400)
}

func (o *UpdateRunbookProcessBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
