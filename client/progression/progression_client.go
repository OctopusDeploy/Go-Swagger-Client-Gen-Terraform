// Code generated by go-swagger; DO NOT EDIT.

package progression

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new progression API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for progression API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetProgressionView(params *GetProgressionViewParams, authInfo runtime.ClientAuthInfoWriter) (*GetProgressionViewOK, error)

	GetProgressionViewSpaces(params *GetProgressionViewSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetProgressionViewSpacesOK, error)

	GetRunbookTaskRunDashboardItems(params *GetRunbookTaskRunDashboardItemsParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookTaskRunDashboardItemsOK, error)

	GetRunbookTaskRunDashboardItemsSpaces(params *GetRunbookTaskRunDashboardItemsSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookTaskRunDashboardItemsSpacesOK, error)

	GetRunbooksProgressionView(params *GetRunbooksProgressionViewParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbooksProgressionViewOK, error)

	GetRunbooksProgressionViewSpaces(params *GetRunbooksProgressionViewSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbooksProgressionViewSpacesOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetProgressionView Returns the progress of a release in the environment lifecycle.
*/
func (a *Client) GetProgressionView(params *GetProgressionViewParams, authInfo runtime.ClientAuthInfoWriter) (*GetProgressionViewOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetProgressionViewParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getProgressionView",
		Method:             "GET",
		PathPattern:        "/api/progression/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetProgressionViewReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetProgressionViewOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getProgressionView: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetProgressionViewSpaces Returns the progress of a release in the environment lifecycle.
*/
func (a *Client) GetProgressionViewSpaces(params *GetProgressionViewSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetProgressionViewSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetProgressionViewSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getProgressionView_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/progression/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetProgressionViewSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetProgressionViewSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getProgressionView_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRunbookTaskRunDashboardItems Returns a list of runbook dashboard items, filtered by various criteria including projectIds, environmentIds, tenantIds, runbookIds, taskIds
*/
func (a *Client) GetRunbookTaskRunDashboardItems(params *GetRunbookTaskRunDashboardItemsParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookTaskRunDashboardItemsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbookTaskRunDashboardItemsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbookTaskRunDashboardItems",
		Method:             "GET",
		PathPattern:        "/api/progression/runbooks/taskRuns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbookTaskRunDashboardItemsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbookTaskRunDashboardItemsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbookTaskRunDashboardItems: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRunbookTaskRunDashboardItemsSpaces Returns a list of runbook dashboard items, filtered by various criteria including projectIds, environmentIds, tenantIds, runbookIds, taskIds
*/
func (a *Client) GetRunbookTaskRunDashboardItemsSpaces(params *GetRunbookTaskRunDashboardItemsSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookTaskRunDashboardItemsSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbookTaskRunDashboardItemsSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbookTaskRunDashboardItems_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/progression/runbooks/taskRuns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbookTaskRunDashboardItemsSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbookTaskRunDashboardItemsSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbookTaskRunDashboardItems_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRunbooksProgressionView Returns the progress of a runbook in the environment lifecycle
*/
func (a *Client) GetRunbooksProgressionView(params *GetRunbooksProgressionViewParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbooksProgressionViewOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbooksProgressionViewParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbooksProgressionView",
		Method:             "GET",
		PathPattern:        "/api/progression/runbooks/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbooksProgressionViewReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbooksProgressionViewOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbooksProgressionView: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRunbooksProgressionViewSpaces Returns the progress of a runbook in the environment lifecycle
*/
func (a *Client) GetRunbooksProgressionViewSpaces(params *GetRunbooksProgressionViewSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbooksProgressionViewSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbooksProgressionViewSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbooksProgressionView_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/progression/runbooks/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbooksProgressionViewSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbooksProgressionViewSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbooksProgressionView_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
