// Code generated by go-swagger; DO NOT EDIT.

package octopus_package_metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// CreateOctopusPackageMetadataSpacesReader is a Reader for the CreateOctopusPackageMetadataSpaces structure.
type CreateOctopusPackageMetadataSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOctopusPackageMetadataSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateOctopusPackageMetadataSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateOctopusPackageMetadataSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateOctopusPackageMetadataSpacesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateOctopusPackageMetadataSpacesOK creates a CreateOctopusPackageMetadataSpacesOK with default headers values
func NewCreateOctopusPackageMetadataSpacesOK() *CreateOctopusPackageMetadataSpacesOK {
	return &CreateOctopusPackageMetadataSpacesOK{}
}

/*CreateOctopusPackageMetadataSpacesOK handles this case with default header values.

OctopusPackageMetadataMappedResource resource returned
*/
type CreateOctopusPackageMetadataSpacesOK struct {
	Payload *models.OctopusPackageMetadataMappedResource
}

func (o *CreateOctopusPackageMetadataSpacesOK) Error() string {
	return fmt.Sprintf("[POST /api/{baseSpaceId}/package-metadata][%d] createOctopusPackageMetadataSpacesOK  %+v", 200, o.Payload)
}

func (o *CreateOctopusPackageMetadataSpacesOK) GetPayload() *models.OctopusPackageMetadataMappedResource {
	return o.Payload
}

func (o *CreateOctopusPackageMetadataSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OctopusPackageMetadataMappedResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOctopusPackageMetadataSpacesBadRequest creates a CreateOctopusPackageMetadataSpacesBadRequest with default headers values
func NewCreateOctopusPackageMetadataSpacesBadRequest() *CreateOctopusPackageMetadataSpacesBadRequest {
	return &CreateOctopusPackageMetadataSpacesBadRequest{}
}

/*CreateOctopusPackageMetadataSpacesBadRequest handles this case with default header values.

Invalid package metadata
*/
type CreateOctopusPackageMetadataSpacesBadRequest struct {
}

func (o *CreateOctopusPackageMetadataSpacesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/{baseSpaceId}/package-metadata][%d] createOctopusPackageMetadataSpacesBadRequest ", 400)
}

func (o *CreateOctopusPackageMetadataSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOctopusPackageMetadataSpacesConflict creates a CreateOctopusPackageMetadataSpacesConflict with default headers values
func NewCreateOctopusPackageMetadataSpacesConflict() *CreateOctopusPackageMetadataSpacesConflict {
	return &CreateOctopusPackageMetadataSpacesConflict{}
}

/*CreateOctopusPackageMetadataSpacesConflict handles this case with default header values.

Metadata for the specified Package ID and version already exists. To proceed anyway, specify an overwriteMode of OverwriteExisting or IgnoreIfExists.
*/
type CreateOctopusPackageMetadataSpacesConflict struct {
}

func (o *CreateOctopusPackageMetadataSpacesConflict) Error() string {
	return fmt.Sprintf("[POST /api/{baseSpaceId}/package-metadata][%d] createOctopusPackageMetadataSpacesConflict ", 409)
}

func (o *CreateOctopusPackageMetadataSpacesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
