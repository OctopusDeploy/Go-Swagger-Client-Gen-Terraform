// Code generated by go-swagger; DO NOT EDIT.

package runbook_runs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// CreateRunbookRunCreateReader is a Reader for the CreateRunbookRunCreate structure.
type CreateRunbookRunCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRunbookRunCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateRunbookRunCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateRunbookRunCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateRunbookRunCreateCreated creates a CreateRunbookRunCreateCreated with default headers values
func NewCreateRunbookRunCreateCreated() *CreateRunbookRunCreateCreated {
	return &CreateRunbookRunCreateCreated{}
}

/*CreateRunbookRunCreateCreated handles this case with default header values.

RunbookRunResource resource returned
*/
type CreateRunbookRunCreateCreated struct {
	Payload *models.RunbookRunResource
}

func (o *CreateRunbookRunCreateCreated) Error() string {
	return fmt.Sprintf("[POST /api/runbookRuns][%d] createRunbookRunCreateCreated  %+v", 201, o.Payload)
}

func (o *CreateRunbookRunCreateCreated) GetPayload() *models.RunbookRunResource {
	return o.Payload
}

func (o *CreateRunbookRunCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RunbookRunResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRunbookRunCreateBadRequest creates a CreateRunbookRunCreateBadRequest with default headers values
func NewCreateRunbookRunCreateBadRequest() *CreateRunbookRunCreateBadRequest {
	return &CreateRunbookRunCreateBadRequest{}
}

/*CreateRunbookRunCreateBadRequest handles this case with default header values.

License is not compliant.
No request body was supplied.
RunbookRun creation failed.
RunbookRun Schedule is invalid.
*/
type CreateRunbookRunCreateBadRequest struct {
}

func (o *CreateRunbookRunCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/runbookRuns][%d] createRunbookRunCreateBadRequest ", 400)
}

func (o *CreateRunbookRunCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
