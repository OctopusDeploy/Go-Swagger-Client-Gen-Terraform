// Code generated by go-swagger; DO NOT EDIT.

package runbook_runs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new runbook runs API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for runbook runs API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateRunbookRunCreate(params *CreateRunbookRunCreateParams, authInfo runtime.ClientAuthInfoWriter) (*CreateRunbookRunCreateCreated, error)

	CreateRunbookRunCreateSpaces(params *CreateRunbookRunCreateSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*CreateRunbookRunCreateSpacesCreated, error)

	DeleteRunbookRun(params *DeleteRunbookRunParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteRunbookRunOK, error)

	DeleteRunbookRunSpaces(params *DeleteRunbookRunSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteRunbookRunSpacesOK, error)

	GetRunbookRunByID(params *GetRunbookRunByIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookRunByIDOK, error)

	GetRunbookRunByIDSpaces(params *GetRunbookRunByIDSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookRunByIDSpacesOK, error)

	IndexRunbookRuns(params *IndexRunbookRunsParams, authInfo runtime.ClientAuthInfoWriter) (*IndexRunbookRunsOK, error)

	IndexRunbookRunsSpaces(params *IndexRunbookRunsSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*IndexRunbookRunsSpacesOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateRunbookRunCreate Creates a new runbookRun.
*/
func (a *Client) CreateRunbookRunCreate(params *CreateRunbookRunCreateParams, authInfo runtime.ClientAuthInfoWriter) (*CreateRunbookRunCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateRunbookRunCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createRunbookRunCreate",
		Method:             "POST",
		PathPattern:        "/api/runbookRuns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateRunbookRunCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateRunbookRunCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createRunbookRunCreate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CreateRunbookRunCreateSpaces Creates a new runbookRun.
*/
func (a *Client) CreateRunbookRunCreateSpaces(params *CreateRunbookRunCreateSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*CreateRunbookRunCreateSpacesCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateRunbookRunCreateSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createRunbookRunCreate_Spaces",
		Method:             "POST",
		PathPattern:        "/api/{baseSpaceId}/runbookRuns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateRunbookRunCreateSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateRunbookRunCreateSpacesCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createRunbookRunCreate_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteRunbookRun deletes a runbook run resource by ID

  Deletes a runbookRun.
*/
func (a *Client) DeleteRunbookRun(params *DeleteRunbookRunParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteRunbookRunOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteRunbookRunParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteRunbookRun",
		Method:             "DELETE",
		PathPattern:        "/api/runbookRuns/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteRunbookRunReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteRunbookRunOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteRunbookRun: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteRunbookRunSpaces deletes a runbook run resource by ID

  Deletes a runbookRun.
*/
func (a *Client) DeleteRunbookRunSpaces(params *DeleteRunbookRunSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteRunbookRunSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteRunbookRunSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteRunbookRun_Spaces",
		Method:             "DELETE",
		PathPattern:        "/api/{baseSpaceId}/runbookRuns/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteRunbookRunSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteRunbookRunSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteRunbookRun_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRunbookRunByID gets a runbook run resource by ID

  Gets a runbookRun by ID.
*/
func (a *Client) GetRunbookRunByID(params *GetRunbookRunByIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookRunByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbookRunByIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbookRunById",
		Method:             "GET",
		PathPattern:        "/api/runbookRuns/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbookRunByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbookRunByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbookRunById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetRunbookRunByIDSpaces gets a runbook run resource by ID

  Gets a runbookRun by ID.
*/
func (a *Client) GetRunbookRunByIDSpaces(params *GetRunbookRunByIDSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetRunbookRunByIDSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRunbookRunByIDSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRunbookRunById_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/runbookRuns/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRunbookRunByIDSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetRunbookRunByIDSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getRunbookRunById_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  IndexRunbookRuns gets a list of runbook run resources

  Lists all of the runbookRuns in the supplied Octopus Deploy Space, from projects, snapshots and environments accessible by the current user. The results will be sorted from most recent to least recent runbookRun.
*/
func (a *Client) IndexRunbookRuns(params *IndexRunbookRunsParams, authInfo runtime.ClientAuthInfoWriter) (*IndexRunbookRunsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewIndexRunbookRunsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "indexRunbookRuns",
		Method:             "GET",
		PathPattern:        "/api/runbookRuns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &IndexRunbookRunsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*IndexRunbookRunsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for indexRunbookRuns: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  IndexRunbookRunsSpaces gets a list of runbook run resources

  Lists all of the runbookRuns in the supplied Octopus Deploy Space, from projects, snapshots and environments accessible by the current user. The results will be sorted from most recent to least recent runbookRun.
*/
func (a *Client) IndexRunbookRunsSpaces(params *IndexRunbookRunsSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*IndexRunbookRunsSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewIndexRunbookRunsSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "indexRunbookRuns_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/runbookRuns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &IndexRunbookRunsSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*IndexRunbookRunsSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for indexRunbookRuns_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
