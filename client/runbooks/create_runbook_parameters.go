// Code generated by go-swagger; DO NOT EDIT.

package runbooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"models"
)

// NewCreateRunbookParams creates a new CreateRunbookParams object
// with the default values initialized.
func NewCreateRunbookParams() *CreateRunbookParams {
	var ()
	return &CreateRunbookParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateRunbookParamsWithTimeout creates a new CreateRunbookParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateRunbookParamsWithTimeout(timeout time.Duration) *CreateRunbookParams {
	var ()
	return &CreateRunbookParams{

		timeout: timeout,
	}
}

// NewCreateRunbookParamsWithContext creates a new CreateRunbookParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateRunbookParamsWithContext(ctx context.Context) *CreateRunbookParams {
	var ()
	return &CreateRunbookParams{

		Context: ctx,
	}
}

// NewCreateRunbookParamsWithHTTPClient creates a new CreateRunbookParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateRunbookParamsWithHTTPClient(client *http.Client) *CreateRunbookParams {
	var ()
	return &CreateRunbookParams{
		HTTPClient: client,
	}
}

/*CreateRunbookParams contains all the parameters to send to the API endpoint
for the create runbook operation typically these are written to a http.Request
*/
type CreateRunbookParams struct {

	/*RunbookResource
	  The RunbookResource resource to create

	*/
	RunbookResource *models.RunbookResource

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create runbook params
func (o *CreateRunbookParams) WithTimeout(timeout time.Duration) *CreateRunbookParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create runbook params
func (o *CreateRunbookParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create runbook params
func (o *CreateRunbookParams) WithContext(ctx context.Context) *CreateRunbookParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create runbook params
func (o *CreateRunbookParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create runbook params
func (o *CreateRunbookParams) WithHTTPClient(client *http.Client) *CreateRunbookParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create runbook params
func (o *CreateRunbookParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRunbookResource adds the runbookResource to the create runbook params
func (o *CreateRunbookParams) WithRunbookResource(runbookResource *models.RunbookResource) *CreateRunbookParams {
	o.SetRunbookResource(runbookResource)
	return o
}

// SetRunbookResource adds the runbookResource to the create runbook params
func (o *CreateRunbookParams) SetRunbookResource(runbookResource *models.RunbookResource) {
	o.RunbookResource = runbookResource
}

// WriteToRequest writes these params to a swagger request
func (o *CreateRunbookParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.RunbookResource != nil {
		if err := r.SetBodyParam(o.RunbookResource); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
