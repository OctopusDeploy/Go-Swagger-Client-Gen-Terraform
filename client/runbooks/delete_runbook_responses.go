// Code generated by go-swagger; DO NOT EDIT.

package runbooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteRunbookReader is a Reader for the DeleteRunbook structure.
type DeleteRunbookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRunbookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRunbookOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRunbookBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRunbookOK creates a DeleteRunbookOK with default headers values
func NewDeleteRunbookOK() *DeleteRunbookOK {
	return &DeleteRunbookOK{}
}

/*DeleteRunbookOK handles this case with default header values.

OK
*/
type DeleteRunbookOK struct {
}

func (o *DeleteRunbookOK) Error() string {
	return fmt.Sprintf("[DELETE /api/runbooks/{id}][%d] deleteRunbookOK ", 200)
}

func (o *DeleteRunbookOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRunbookBadRequest creates a DeleteRunbookBadRequest with default headers values
func NewDeleteRunbookBadRequest() *DeleteRunbookBadRequest {
	return &DeleteRunbookBadRequest{}
}

/*DeleteRunbookBadRequest handles this case with default header values.

BadRequest
No id parameter was provided.
This resource is read-only and cannot be deleted.
*/
type DeleteRunbookBadRequest struct {
}

func (o *DeleteRunbookBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/runbooks/{id}][%d] deleteRunbookBadRequest ", 400)
}

func (o *DeleteRunbookBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
