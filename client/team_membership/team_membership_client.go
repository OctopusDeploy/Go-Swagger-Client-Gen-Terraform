// Code generated by go-swagger; DO NOT EDIT.

package team_membership

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new team membership API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for team membership API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateTeamMembershipPreview(params *CreateTeamMembershipPreviewParams, authInfo runtime.ClientAuthInfoWriter) (*CreateTeamMembershipPreviewOK, error)

	CreateTeamMembershipPreviewSpaces(params *CreateTeamMembershipPreviewSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*CreateTeamMembershipPreviewSpacesOK, error)

	GetTeamMembership(params *GetTeamMembershipParams, authInfo runtime.ClientAuthInfoWriter) (*GetTeamMembershipOK, error)

	GetTeamMembershipSpaces(params *GetTeamMembershipSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetTeamMembershipSpacesOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateTeamMembershipPreview Lists all the users that would belong to the specified team, including information about whether they are directly assigned and/or indirectly assigned via external security groups.
*/
func (a *Client) CreateTeamMembershipPreview(params *CreateTeamMembershipPreviewParams, authInfo runtime.ClientAuthInfoWriter) (*CreateTeamMembershipPreviewOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateTeamMembershipPreviewParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createTeamMembershipPreview",
		Method:             "POST",
		PathPattern:        "/api/teammembership/previewteam",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateTeamMembershipPreviewReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateTeamMembershipPreviewOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createTeamMembershipPreview: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CreateTeamMembershipPreviewSpaces Lists all the users that would belong to the specified team, including information about whether they are directly assigned and/or indirectly assigned via external security groups.
*/
func (a *Client) CreateTeamMembershipPreviewSpaces(params *CreateTeamMembershipPreviewSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*CreateTeamMembershipPreviewSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateTeamMembershipPreviewSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createTeamMembershipPreview_Spaces",
		Method:             "POST",
		PathPattern:        "/api/{baseSpaceId}/teammembership/previewteam",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateTeamMembershipPreviewSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateTeamMembershipPreviewSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createTeamMembershipPreview_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetTeamMembership Gets a list of team memberships, including any from external auth-provider security groups. Memberships can be filtered by userId.
*/
func (a *Client) GetTeamMembership(params *GetTeamMembershipParams, authInfo runtime.ClientAuthInfoWriter) (*GetTeamMembershipOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetTeamMembershipParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getTeamMembership",
		Method:             "GET",
		PathPattern:        "/api/teammembership",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetTeamMembershipReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetTeamMembershipOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getTeamMembership: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetTeamMembershipSpaces Gets a list of team memberships, including any from external auth-provider security groups. Memberships can be filtered by userId.
*/
func (a *Client) GetTeamMembershipSpaces(params *GetTeamMembershipSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetTeamMembershipSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetTeamMembershipSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getTeamMembership_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/teammembership",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetTeamMembershipSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetTeamMembershipSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getTeamMembership_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
