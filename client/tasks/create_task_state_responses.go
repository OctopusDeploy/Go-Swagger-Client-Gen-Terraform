// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// CreateTaskStateReader is a Reader for the CreateTaskState structure.
type CreateTaskStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTaskStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateTaskStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateTaskStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateTaskStateOK creates a CreateTaskStateOK with default headers values
func NewCreateTaskStateOK() *CreateTaskStateOK {
	return &CreateTaskStateOK{}
}

/*CreateTaskStateOK handles this case with default header values.

TaskResource resource returned
*/
type CreateTaskStateOK struct {
	Payload *models.TaskResource
}

func (o *CreateTaskStateOK) Error() string {
	return fmt.Sprintf("[POST /api/tasks/{id}/state][%d] createTaskStateOK  %+v", 200, o.Payload)
}

func (o *CreateTaskStateOK) GetPayload() *models.TaskResource {
	return o.Payload
}

func (o *CreateTaskStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TaskResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTaskStateBadRequest creates a CreateTaskStateBadRequest with default headers values
func NewCreateTaskStateBadRequest() *CreateTaskStateBadRequest {
	return &CreateTaskStateBadRequest{}
}

/*CreateTaskStateBadRequest handles this case with default header values.

No body was provided.
No id parameter was provided.
No reason was provided.
No state was provided.
The task can not be put into the state.  Valid states are: Canceled, Failed, Success.
The task is already in the state.
The task state can not be changed to the selected state.  It can only be changed out of the states: Canceled, Failed, Success.
*/
type CreateTaskStateBadRequest struct {
}

func (o *CreateTaskStateBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/tasks/{id}/state][%d] createTaskStateBadRequest ", 400)
}

func (o *CreateTaskStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
