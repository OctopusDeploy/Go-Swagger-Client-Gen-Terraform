// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPackageNotesSpacesParams creates a new GetPackageNotesSpacesParams object
// with the default values initialized.
func NewGetPackageNotesSpacesParams() *GetPackageNotesSpacesParams {
	var ()
	return &GetPackageNotesSpacesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPackageNotesSpacesParamsWithTimeout creates a new GetPackageNotesSpacesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPackageNotesSpacesParamsWithTimeout(timeout time.Duration) *GetPackageNotesSpacesParams {
	var ()
	return &GetPackageNotesSpacesParams{

		timeout: timeout,
	}
}

// NewGetPackageNotesSpacesParamsWithContext creates a new GetPackageNotesSpacesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPackageNotesSpacesParamsWithContext(ctx context.Context) *GetPackageNotesSpacesParams {
	var ()
	return &GetPackageNotesSpacesParams{

		Context: ctx,
	}
}

// NewGetPackageNotesSpacesParamsWithHTTPClient creates a new GetPackageNotesSpacesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPackageNotesSpacesParamsWithHTTPClient(client *http.Client) *GetPackageNotesSpacesParams {
	var ()
	return &GetPackageNotesSpacesParams{
		HTTPClient: client,
	}
}

/*GetPackageNotesSpacesParams contains all the parameters to send to the API endpoint
for the get package notes spaces operation typically these are written to a http.Request
*/
type GetPackageNotesSpacesParams struct {

	/*BaseSpaceID
	  ID of the space

	*/
	BaseSpaceID string
	/*ID
	  ID of the feed

	*/
	ID string
	/*PackageID
	  Package Id

	*/
	PackageID *string
	/*Version
	  Package Version

	*/
	Version *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) WithTimeout(timeout time.Duration) *GetPackageNotesSpacesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) WithContext(ctx context.Context) *GetPackageNotesSpacesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) WithHTTPClient(client *http.Client) *GetPackageNotesSpacesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBaseSpaceID adds the baseSpaceID to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) WithBaseSpaceID(baseSpaceID string) *GetPackageNotesSpacesParams {
	o.SetBaseSpaceID(baseSpaceID)
	return o
}

// SetBaseSpaceID adds the baseSpaceId to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) SetBaseSpaceID(baseSpaceID string) {
	o.BaseSpaceID = baseSpaceID
}

// WithID adds the id to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) WithID(id string) *GetPackageNotesSpacesParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) SetID(id string) {
	o.ID = id
}

// WithPackageID adds the packageID to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) WithPackageID(packageID *string) *GetPackageNotesSpacesParams {
	o.SetPackageID(packageID)
	return o
}

// SetPackageID adds the packageId to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) SetPackageID(packageID *string) {
	o.PackageID = packageID
}

// WithVersion adds the version to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) WithVersion(version *string) *GetPackageNotesSpacesParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get package notes spaces params
func (o *GetPackageNotesSpacesParams) SetVersion(version *string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetPackageNotesSpacesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param baseSpaceId
	if err := r.SetPathParam("baseSpaceId", o.BaseSpaceID); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.PackageID != nil {

		// query param packageId
		var qrPackageID string
		if o.PackageID != nil {
			qrPackageID = *o.PackageID
		}
		qPackageID := qrPackageID
		if qPackageID != "" {
			if err := r.SetQueryParam("packageId", qPackageID); err != nil {
				return err
			}
		}

	}

	if o.Version != nil {

		// query param version
		var qrVersion string
		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := qrVersion
		if qVersion != "" {
			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
