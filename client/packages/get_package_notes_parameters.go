// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPackageNotesParams creates a new GetPackageNotesParams object
// with the default values initialized.
func NewGetPackageNotesParams() *GetPackageNotesParams {
	var ()
	return &GetPackageNotesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPackageNotesParamsWithTimeout creates a new GetPackageNotesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPackageNotesParamsWithTimeout(timeout time.Duration) *GetPackageNotesParams {
	var ()
	return &GetPackageNotesParams{

		timeout: timeout,
	}
}

// NewGetPackageNotesParamsWithContext creates a new GetPackageNotesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPackageNotesParamsWithContext(ctx context.Context) *GetPackageNotesParams {
	var ()
	return &GetPackageNotesParams{

		Context: ctx,
	}
}

// NewGetPackageNotesParamsWithHTTPClient creates a new GetPackageNotesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPackageNotesParamsWithHTTPClient(client *http.Client) *GetPackageNotesParams {
	var ()
	return &GetPackageNotesParams{
		HTTPClient: client,
	}
}

/*GetPackageNotesParams contains all the parameters to send to the API endpoint
for the get package notes operation typically these are written to a http.Request
*/
type GetPackageNotesParams struct {

	/*ID
	  ID of the feed

	*/
	ID string
	/*PackageID
	  Package Id

	*/
	PackageID *string
	/*Version
	  Package Version

	*/
	Version *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get package notes params
func (o *GetPackageNotesParams) WithTimeout(timeout time.Duration) *GetPackageNotesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get package notes params
func (o *GetPackageNotesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get package notes params
func (o *GetPackageNotesParams) WithContext(ctx context.Context) *GetPackageNotesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get package notes params
func (o *GetPackageNotesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get package notes params
func (o *GetPackageNotesParams) WithHTTPClient(client *http.Client) *GetPackageNotesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get package notes params
func (o *GetPackageNotesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get package notes params
func (o *GetPackageNotesParams) WithID(id string) *GetPackageNotesParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get package notes params
func (o *GetPackageNotesParams) SetID(id string) {
	o.ID = id
}

// WithPackageID adds the packageID to the get package notes params
func (o *GetPackageNotesParams) WithPackageID(packageID *string) *GetPackageNotesParams {
	o.SetPackageID(packageID)
	return o
}

// SetPackageID adds the packageId to the get package notes params
func (o *GetPackageNotesParams) SetPackageID(packageID *string) {
	o.PackageID = packageID
}

// WithVersion adds the version to the get package notes params
func (o *GetPackageNotesParams) WithVersion(version *string) *GetPackageNotesParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get package notes params
func (o *GetPackageNotesParams) SetVersion(version *string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetPackageNotesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.PackageID != nil {

		// query param packageId
		var qrPackageID string
		if o.PackageID != nil {
			qrPackageID = *o.PackageID
		}
		qPackageID := qrPackageID
		if qPackageID != "" {
			if err := r.SetQueryParam("packageId", qPackageID); err != nil {
				return err
			}
		}

	}

	if o.Version != nil {

		// query param version
		var qrVersion string
		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := qrVersion
		if qVersion != "" {
			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
