// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// GetPackageRepositoryListSpacesReader is a Reader for the GetPackageRepositoryListSpaces structure.
type GetPackageRepositoryListSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPackageRepositoryListSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPackageRepositoryListSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPackageRepositoryListSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPackageRepositoryListSpacesOK creates a GetPackageRepositoryListSpacesOK with default headers values
func NewGetPackageRepositoryListSpacesOK() *GetPackageRepositoryListSpacesOK {
	return &GetPackageRepositoryListSpacesOK{}
}

/*GetPackageRepositoryListSpacesOK handles this case with default header values.

ResourceCollection_of_PackageResource resource returned
*/
type GetPackageRepositoryListSpacesOK struct {
	Payload *models.ResourceCollectionOfPackageResource
}

func (o *GetPackageRepositoryListSpacesOK) Error() string {
	return fmt.Sprintf("[GET /api/{baseSpaceId}/packages][%d] getPackageRepositoryListSpacesOK  %+v", 200, o.Payload)
}

func (o *GetPackageRepositoryListSpacesOK) GetPayload() *models.ResourceCollectionOfPackageResource {
	return o.Payload
}

func (o *GetPackageRepositoryListSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceCollectionOfPackageResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPackageRepositoryListSpacesBadRequest creates a GetPackageRepositoryListSpacesBadRequest with default headers values
func NewGetPackageRepositoryListSpacesBadRequest() *GetPackageRepositoryListSpacesBadRequest {
	return &GetPackageRepositoryListSpacesBadRequest{}
}

/*GetPackageRepositoryListSpacesBadRequest handles this case with default header values.

Only one of either nuGetPackageId or filter may be specified.
*/
type GetPackageRepositoryListSpacesBadRequest struct {
}

func (o *GetPackageRepositoryListSpacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/{baseSpaceId}/packages][%d] getPackageRepositoryListSpacesBadRequest ", 400)
}

func (o *GetPackageRepositoryListSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
