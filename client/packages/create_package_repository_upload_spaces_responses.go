// Code generated by go-swagger; DO NOT EDIT.

package packages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// CreatePackageRepositoryUploadSpacesReader is a Reader for the CreatePackageRepositoryUploadSpaces structure.
type CreatePackageRepositoryUploadSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePackageRepositoryUploadSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreatePackageRepositoryUploadSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreatePackageRepositoryUploadSpacesCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreatePackageRepositoryUploadSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreatePackageRepositoryUploadSpacesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreatePackageRepositoryUploadSpacesOK creates a CreatePackageRepositoryUploadSpacesOK with default headers values
func NewCreatePackageRepositoryUploadSpacesOK() *CreatePackageRepositoryUploadSpacesOK {
	return &CreatePackageRepositoryUploadSpacesOK{}
}

/*CreatePackageRepositoryUploadSpacesOK handles this case with default header values.

OK
*/
type CreatePackageRepositoryUploadSpacesOK struct {
}

func (o *CreatePackageRepositoryUploadSpacesOK) Error() string {
	return fmt.Sprintf("[POST /api/{baseSpaceId}/packages/raw][%d] createPackageRepositoryUploadSpacesOK ", 200)
}

func (o *CreatePackageRepositoryUploadSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePackageRepositoryUploadSpacesCreated creates a CreatePackageRepositoryUploadSpacesCreated with default headers values
func NewCreatePackageRepositoryUploadSpacesCreated() *CreatePackageRepositoryUploadSpacesCreated {
	return &CreatePackageRepositoryUploadSpacesCreated{}
}

/*CreatePackageRepositoryUploadSpacesCreated handles this case with default header values.

PackageFromBuiltInFeedResource resource returned
*/
type CreatePackageRepositoryUploadSpacesCreated struct {
	Payload *models.PackageFromBuiltInFeedResource
}

func (o *CreatePackageRepositoryUploadSpacesCreated) Error() string {
	return fmt.Sprintf("[POST /api/{baseSpaceId}/packages/raw][%d] createPackageRepositoryUploadSpacesCreated  %+v", 201, o.Payload)
}

func (o *CreatePackageRepositoryUploadSpacesCreated) GetPayload() *models.PackageFromBuiltInFeedResource {
	return o.Payload
}

func (o *CreatePackageRepositoryUploadSpacesCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PackageFromBuiltInFeedResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePackageRepositoryUploadSpacesBadRequest creates a CreatePackageRepositoryUploadSpacesBadRequest with default headers values
func NewCreatePackageRepositoryUploadSpacesBadRequest() *CreatePackageRepositoryUploadSpacesBadRequest {
	return &CreatePackageRepositoryUploadSpacesBadRequest{}
}

/*CreatePackageRepositoryUploadSpacesBadRequest handles this case with default header values.

A package file must be provided
Package Name is too long.
The uploaded package file had length equal to 0. Please upload a non-empty file.
*/
type CreatePackageRepositoryUploadSpacesBadRequest struct {
}

func (o *CreatePackageRepositoryUploadSpacesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/{baseSpaceId}/packages/raw][%d] createPackageRepositoryUploadSpacesBadRequest ", 400)
}

func (o *CreatePackageRepositoryUploadSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePackageRepositoryUploadSpacesConflict creates a CreatePackageRepositoryUploadSpacesConflict with default headers values
func NewCreatePackageRepositoryUploadSpacesConflict() *CreatePackageRepositoryUploadSpacesConflict {
	return &CreatePackageRepositoryUploadSpacesConflict{}
}

/*CreatePackageRepositoryUploadSpacesConflict handles this case with default header values.

A package with the same ID and version already exists. To proceed anyway, specify an overwriteMode of OverwriteExisting or IgnoreIfExists.
*/
type CreatePackageRepositoryUploadSpacesConflict struct {
}

func (o *CreatePackageRepositoryUploadSpacesConflict) Error() string {
	return fmt.Sprintf("[POST /api/{baseSpaceId}/packages/raw][%d] createPackageRepositoryUploadSpacesConflict ", 409)
}

func (o *CreatePackageRepositoryUploadSpacesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
