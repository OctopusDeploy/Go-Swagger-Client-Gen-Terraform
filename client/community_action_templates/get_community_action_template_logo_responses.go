// Code generated by go-swagger; DO NOT EDIT.

package community_action_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetCommunityActionTemplateLogoReader is a Reader for the GetCommunityActionTemplateLogo structure.
type GetCommunityActionTemplateLogoReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetCommunityActionTemplateLogoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCommunityActionTemplateLogoOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 304:
		result := NewGetCommunityActionTemplateLogoNotModified()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetCommunityActionTemplateLogoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCommunityActionTemplateLogoOK creates a GetCommunityActionTemplateLogoOK with default headers values
func NewGetCommunityActionTemplateLogoOK(writer io.Writer) *GetCommunityActionTemplateLogoOK {
	return &GetCommunityActionTemplateLogoOK{
		Payload: writer,
	}
}

/*GetCommunityActionTemplateLogoOK handles this case with default header values.

OK
*/
type GetCommunityActionTemplateLogoOK struct {
	Payload io.Writer
}

func (o *GetCommunityActionTemplateLogoOK) Error() string {
	return fmt.Sprintf("[GET /api/communityactiontemplates/{id}/logo][%d] getCommunityActionTemplateLogoOK  %+v", 200, o.Payload)
}

func (o *GetCommunityActionTemplateLogoOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetCommunityActionTemplateLogoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommunityActionTemplateLogoNotModified creates a GetCommunityActionTemplateLogoNotModified with default headers values
func NewGetCommunityActionTemplateLogoNotModified() *GetCommunityActionTemplateLogoNotModified {
	return &GetCommunityActionTemplateLogoNotModified{}
}

/*GetCommunityActionTemplateLogoNotModified handles this case with default header values.

NotModified
*/
type GetCommunityActionTemplateLogoNotModified struct {
}

func (o *GetCommunityActionTemplateLogoNotModified) Error() string {
	return fmt.Sprintf("[GET /api/communityactiontemplates/{id}/logo][%d] getCommunityActionTemplateLogoNotModified ", 304)
}

func (o *GetCommunityActionTemplateLogoNotModified) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCommunityActionTemplateLogoBadRequest creates a GetCommunityActionTemplateLogoBadRequest with default headers values
func NewGetCommunityActionTemplateLogoBadRequest() *GetCommunityActionTemplateLogoBadRequest {
	return &GetCommunityActionTemplateLogoBadRequest{}
}

/*GetCommunityActionTemplateLogoBadRequest handles this case with default header values.

No id parameter was provided.
*/
type GetCommunityActionTemplateLogoBadRequest struct {
}

func (o *GetCommunityActionTemplateLogoBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/communityactiontemplates/{id}/logo][%d] getCommunityActionTemplateLogoBadRequest ", 400)
}

func (o *GetCommunityActionTemplateLogoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
