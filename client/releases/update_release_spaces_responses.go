// Code generated by go-swagger; DO NOT EDIT.

package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// UpdateReleaseSpacesReader is a Reader for the UpdateReleaseSpaces structure.
type UpdateReleaseSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateReleaseSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateReleaseSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateReleaseSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateReleaseSpacesOK creates a UpdateReleaseSpacesOK with default headers values
func NewUpdateReleaseSpacesOK() *UpdateReleaseSpacesOK {
	return &UpdateReleaseSpacesOK{}
}

/*UpdateReleaseSpacesOK handles this case with default header values.

ReleaseResource Modified
*/
type UpdateReleaseSpacesOK struct {
	Payload *models.ReleaseResource
}

func (o *UpdateReleaseSpacesOK) Error() string {
	return fmt.Sprintf("[PUT /api/{baseSpaceId}/releases/{id}][%d] updateReleaseSpacesOK  %+v", 200, o.Payload)
}

func (o *UpdateReleaseSpacesOK) GetPayload() *models.ReleaseResource {
	return o.Payload
}

func (o *UpdateReleaseSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReleaseResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReleaseSpacesBadRequest creates a UpdateReleaseSpacesBadRequest with default headers values
func NewUpdateReleaseSpacesBadRequest() *UpdateReleaseSpacesBadRequest {
	return &UpdateReleaseSpacesBadRequest{}
}

/*UpdateReleaseSpacesBadRequest handles this case with default header values.

A version must be specified for every included package.
Model validation failed.
No id parameter was provided.
No request body was supplied.
Release '{release.Version}' already exists for this project. Please use a different version, or look at using a mask to auto-increment the number.
The channel {channel.Name} specified for this release belongs to the project {channel.ProjectId}. It does not belong to the same project as the release.
The release `{0}` currently contains deployments with step(s) {1} that would be skipped due to the updated channel. Please select a different channel or delete and recreate this release.
The release number '{release.Version}' does not appear to be a valid semantic version number. The version must consist of between 1 and 4 number only parts (separated by '.') before the optional pre-release part (after the '-'). e.g. 2, 2.1, 2.4.0.23, 2.4-beta and 1-beta.2
The requested package versions for the following steps violate the channel version rules: {0}. Please specify a different package version, channel or provide the `ignoreChannelRules` parameter to override this check.
This resource is read-only and cannot be modified.
*/
type UpdateReleaseSpacesBadRequest struct {
}

func (o *UpdateReleaseSpacesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/{baseSpaceId}/releases/{id}][%d] updateReleaseSpacesBadRequest ", 400)
}

func (o *UpdateReleaseSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
