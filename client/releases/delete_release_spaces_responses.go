// Code generated by go-swagger; DO NOT EDIT.

package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteReleaseSpacesReader is a Reader for the DeleteReleaseSpaces structure.
type DeleteReleaseSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteReleaseSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteReleaseSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteReleaseSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteReleaseSpacesOK creates a DeleteReleaseSpacesOK with default headers values
func NewDeleteReleaseSpacesOK() *DeleteReleaseSpacesOK {
	return &DeleteReleaseSpacesOK{}
}

/*DeleteReleaseSpacesOK handles this case with default header values.

OK
*/
type DeleteReleaseSpacesOK struct {
}

func (o *DeleteReleaseSpacesOK) Error() string {
	return fmt.Sprintf("[DELETE /api/{baseSpaceId}/releases/{id}][%d] deleteReleaseSpacesOK ", 200)
}

func (o *DeleteReleaseSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteReleaseSpacesBadRequest creates a DeleteReleaseSpacesBadRequest with default headers values
func NewDeleteReleaseSpacesBadRequest() *DeleteReleaseSpacesBadRequest {
	return &DeleteReleaseSpacesBadRequest{}
}

/*DeleteReleaseSpacesBadRequest handles this case with default header values.

BadRequest
No id parameter was provided.
This resource is read-only and cannot be deleted.
*/
type DeleteReleaseSpacesBadRequest struct {
}

func (o *DeleteReleaseSpacesBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/{baseSpaceId}/releases/{id}][%d] deleteReleaseSpacesBadRequest ", 400)
}

func (o *DeleteReleaseSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
