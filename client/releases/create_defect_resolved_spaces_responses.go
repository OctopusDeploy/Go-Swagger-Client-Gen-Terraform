// Code generated by go-swagger; DO NOT EDIT.

package releases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// CreateDefectResolvedSpacesReader is a Reader for the CreateDefectResolvedSpaces structure.
type CreateDefectResolvedSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDefectResolvedSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDefectResolvedSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDefectResolvedSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateDefectResolvedSpacesOK creates a CreateDefectResolvedSpacesOK with default headers values
func NewCreateDefectResolvedSpacesOK() *CreateDefectResolvedSpacesOK {
	return &CreateDefectResolvedSpacesOK{}
}

/*CreateDefectResolvedSpacesOK handles this case with default header values.

DefectResource resource returned
*/
type CreateDefectResolvedSpacesOK struct {
	Payload *models.DefectResource
}

func (o *CreateDefectResolvedSpacesOK) Error() string {
	return fmt.Sprintf("[POST /api/{baseSpaceId}/releases/{id}/defects/resolve][%d] createDefectResolvedSpacesOK  %+v", 200, o.Payload)
}

func (o *CreateDefectResolvedSpacesOK) GetPayload() *models.DefectResource {
	return o.Payload
}

func (o *CreateDefectResolvedSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DefectResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDefectResolvedSpacesBadRequest creates a CreateDefectResolvedSpacesBadRequest with default headers values
func NewCreateDefectResolvedSpacesBadRequest() *CreateDefectResolvedSpacesBadRequest {
	return &CreateDefectResolvedSpacesBadRequest{}
}

/*CreateDefectResolvedSpacesBadRequest handles this case with default header values.

Defect has already been resolved.
Index refers to an invalid defect.
No id parameter was provided.
*/
type CreateDefectResolvedSpacesBadRequest struct {
}

func (o *CreateDefectResolvedSpacesBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/{baseSpaceId}/releases/{id}/defects/resolve][%d] createDefectResolvedSpacesBadRequest ", 400)
}

func (o *CreateDefectResolvedSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
