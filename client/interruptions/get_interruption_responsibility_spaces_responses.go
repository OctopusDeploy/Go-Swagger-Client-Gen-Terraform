// Code generated by go-swagger; DO NOT EDIT.

package interruptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// GetInterruptionResponsibilitySpacesReader is a Reader for the GetInterruptionResponsibilitySpaces structure.
type GetInterruptionResponsibilitySpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInterruptionResponsibilitySpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInterruptionResponsibilitySpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInterruptionResponsibilitySpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetInterruptionResponsibilitySpacesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInterruptionResponsibilitySpacesOK creates a GetInterruptionResponsibilitySpacesOK with default headers values
func NewGetInterruptionResponsibilitySpacesOK() *GetInterruptionResponsibilitySpacesOK {
	return &GetInterruptionResponsibilitySpacesOK{}
}

/*GetInterruptionResponsibilitySpacesOK handles this case with default header values.

UserResource resource returned
*/
type GetInterruptionResponsibilitySpacesOK struct {
	Payload *models.UserResource
}

func (o *GetInterruptionResponsibilitySpacesOK) Error() string {
	return fmt.Sprintf("[GET /api/{baseSpaceId}/interruptions/{id}/responsible][%d] getInterruptionResponsibilitySpacesOK  %+v", 200, o.Payload)
}

func (o *GetInterruptionResponsibilitySpacesOK) GetPayload() *models.UserResource {
	return o.Payload
}

func (o *GetInterruptionResponsibilitySpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInterruptionResponsibilitySpacesBadRequest creates a GetInterruptionResponsibilitySpacesBadRequest with default headers values
func NewGetInterruptionResponsibilitySpacesBadRequest() *GetInterruptionResponsibilitySpacesBadRequest {
	return &GetInterruptionResponsibilitySpacesBadRequest{}
}

/*GetInterruptionResponsibilitySpacesBadRequest handles this case with default header values.

No id parameter was provided.
This interruption has already been submitted, possibly by another user.
*/
type GetInterruptionResponsibilitySpacesBadRequest struct {
}

func (o *GetInterruptionResponsibilitySpacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/{baseSpaceId}/interruptions/{id}/responsible][%d] getInterruptionResponsibilitySpacesBadRequest ", 400)
}

func (o *GetInterruptionResponsibilitySpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInterruptionResponsibilitySpacesMethodNotAllowed creates a GetInterruptionResponsibilitySpacesMethodNotAllowed with default headers values
func NewGetInterruptionResponsibilitySpacesMethodNotAllowed() *GetInterruptionResponsibilitySpacesMethodNotAllowed {
	return &GetInterruptionResponsibilitySpacesMethodNotAllowed{}
}

/*GetInterruptionResponsibilitySpacesMethodNotAllowed handles this case with default header values.

MethodNotAllowed
*/
type GetInterruptionResponsibilitySpacesMethodNotAllowed struct {
}

func (o *GetInterruptionResponsibilitySpacesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/{baseSpaceId}/interruptions/{id}/responsible][%d] getInterruptionResponsibilitySpacesMethodNotAllowed ", 405)
}

func (o *GetInterruptionResponsibilitySpacesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
