// Code generated by go-swagger; DO NOT EDIT.

package interruptions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// UpdateInterruptionResponsibilityReader is a Reader for the UpdateInterruptionResponsibility structure.
type UpdateInterruptionResponsibilityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateInterruptionResponsibilityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateInterruptionResponsibilityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateInterruptionResponsibilityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateInterruptionResponsibilityMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateInterruptionResponsibilityOK creates a UpdateInterruptionResponsibilityOK with default headers values
func NewUpdateInterruptionResponsibilityOK() *UpdateInterruptionResponsibilityOK {
	return &UpdateInterruptionResponsibilityOK{}
}

/*UpdateInterruptionResponsibilityOK handles this case with default header values.

UserResource resource returned
*/
type UpdateInterruptionResponsibilityOK struct {
	Payload *models.UserResource
}

func (o *UpdateInterruptionResponsibilityOK) Error() string {
	return fmt.Sprintf("[PUT /api/interruptions/{id}/responsible][%d] updateInterruptionResponsibilityOK  %+v", 200, o.Payload)
}

func (o *UpdateInterruptionResponsibilityOK) GetPayload() *models.UserResource {
	return o.Payload
}

func (o *UpdateInterruptionResponsibilityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateInterruptionResponsibilityBadRequest creates a UpdateInterruptionResponsibilityBadRequest with default headers values
func NewUpdateInterruptionResponsibilityBadRequest() *UpdateInterruptionResponsibilityBadRequest {
	return &UpdateInterruptionResponsibilityBadRequest{}
}

/*UpdateInterruptionResponsibilityBadRequest handles this case with default header values.

No id parameter was provided.
This interruption has already been submitted, possibly by another user.
*/
type UpdateInterruptionResponsibilityBadRequest struct {
}

func (o *UpdateInterruptionResponsibilityBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/interruptions/{id}/responsible][%d] updateInterruptionResponsibilityBadRequest ", 400)
}

func (o *UpdateInterruptionResponsibilityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateInterruptionResponsibilityMethodNotAllowed creates a UpdateInterruptionResponsibilityMethodNotAllowed with default headers values
func NewUpdateInterruptionResponsibilityMethodNotAllowed() *UpdateInterruptionResponsibilityMethodNotAllowed {
	return &UpdateInterruptionResponsibilityMethodNotAllowed{}
}

/*UpdateInterruptionResponsibilityMethodNotAllowed handles this case with default header values.

MethodNotAllowed
*/
type UpdateInterruptionResponsibilityMethodNotAllowed struct {
}

func (o *UpdateInterruptionResponsibilityMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /api/interruptions/{id}/responsible][%d] updateInterruptionResponsibilityMethodNotAllowed ", 405)
}

func (o *UpdateInterruptionResponsibilityMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
