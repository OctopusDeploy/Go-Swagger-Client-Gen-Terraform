// Code generated by go-swagger; DO NOT EDIT.

package channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteChannelReader is a Reader for the DeleteChannel structure.
type DeleteChannelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteChannelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteChannelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteChannelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteChannelOK creates a DeleteChannelOK with default headers values
func NewDeleteChannelOK() *DeleteChannelOK {
	return &DeleteChannelOK{}
}

/*DeleteChannelOK handles this case with default header values.

OK
*/
type DeleteChannelOK struct {
}

func (o *DeleteChannelOK) Error() string {
	return fmt.Sprintf("[DELETE /api/channels/{id}][%d] deleteChannelOK ", 200)
}

func (o *DeleteChannelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteChannelBadRequest creates a DeleteChannelBadRequest with default headers values
func NewDeleteChannelBadRequest() *DeleteChannelBadRequest {
	return &DeleteChannelBadRequest{}
}

/*DeleteChannelBadRequest handles this case with default header values.

BadRequest
No id parameter was provided.
The channel you are about to remove is used by '{action.Name}' step.
This resource is read-only and cannot be deleted.
You cannot delete the default channel.
You cannot delete the only remaining channel
*/
type DeleteChannelBadRequest struct {
}

func (o *DeleteChannelBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/channels/{id}][%d] deleteChannelBadRequest ", 400)
}

func (o *DeleteChannelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
