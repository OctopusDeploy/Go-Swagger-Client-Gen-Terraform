// Code generated by go-swagger; DO NOT EDIT.

package library_variable_sets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new library variable sets API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for library variable sets API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CreateLibraryVariableSet(params *CreateLibraryVariableSetParams, authInfo runtime.ClientAuthInfoWriter) (*CreateLibraryVariableSetCreated, error)

	CreateLibraryVariableSetSpaces(params *CreateLibraryVariableSetSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*CreateLibraryVariableSetSpacesCreated, error)

	DeleteLibraryVariableSet(params *DeleteLibraryVariableSetParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLibraryVariableSetOK, error)

	DeleteLibraryVariableSetSpaces(params *DeleteLibraryVariableSetSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLibraryVariableSetSpacesOK, error)

	GetLibraryVariableSetByID(params *GetLibraryVariableSetByIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLibraryVariableSetByIDOK, error)

	GetLibraryVariableSetByIDSpaces(params *GetLibraryVariableSetByIDSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLibraryVariableSetByIDSpacesOK, error)

	GetLibraryVariableSetUsageList(params *GetLibraryVariableSetUsageListParams, authInfo runtime.ClientAuthInfoWriter) (*GetLibraryVariableSetUsageListOK, error)

	GetLibraryVariableSetUsageListSpaces(params *GetLibraryVariableSetUsageListSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLibraryVariableSetUsageListSpacesOK, error)

	IndexLibraryVariableSets(params *IndexLibraryVariableSetsParams, authInfo runtime.ClientAuthInfoWriter) (*IndexLibraryVariableSetsOK, error)

	IndexLibraryVariableSetsSpaces(params *IndexLibraryVariableSetsSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*IndexLibraryVariableSetsSpacesOK, error)

	ListAllLibraryVariableSets(params *ListAllLibraryVariableSetsParams, authInfo runtime.ClientAuthInfoWriter) (*ListAllLibraryVariableSetsOK, error)

	ListAllLibraryVariableSetsSpaces(params *ListAllLibraryVariableSetsSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*ListAllLibraryVariableSetsSpacesOK, error)

	UpdateLibraryVariableSet(params *UpdateLibraryVariableSetParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateLibraryVariableSetOK, error)

	UpdateLibraryVariableSetSpaces(params *UpdateLibraryVariableSetSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateLibraryVariableSetSpacesOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateLibraryVariableSet creates a library variable set resource

  Creates a new library variable set.
*/
func (a *Client) CreateLibraryVariableSet(params *CreateLibraryVariableSetParams, authInfo runtime.ClientAuthInfoWriter) (*CreateLibraryVariableSetCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateLibraryVariableSetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createLibraryVariableSet",
		Method:             "POST",
		PathPattern:        "/api/libraryvariablesets",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateLibraryVariableSetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateLibraryVariableSetCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createLibraryVariableSet: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CreateLibraryVariableSetSpaces creates a library variable set resource

  Creates a new library variable set.
*/
func (a *Client) CreateLibraryVariableSetSpaces(params *CreateLibraryVariableSetSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*CreateLibraryVariableSetSpacesCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateLibraryVariableSetSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "createLibraryVariableSet_Spaces",
		Method:             "POST",
		PathPattern:        "/api/{baseSpaceId}/libraryvariablesets",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateLibraryVariableSetSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateLibraryVariableSetSpacesCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createLibraryVariableSet_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteLibraryVariableSet deletes a library variable set resource by ID

  Deletes an existing library variable set.
*/
func (a *Client) DeleteLibraryVariableSet(params *DeleteLibraryVariableSetParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLibraryVariableSetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLibraryVariableSetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteLibraryVariableSet",
		Method:             "DELETE",
		PathPattern:        "/api/libraryvariablesets/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteLibraryVariableSetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLibraryVariableSetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteLibraryVariableSet: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteLibraryVariableSetSpaces deletes a library variable set resource by ID

  Deletes an existing library variable set.
*/
func (a *Client) DeleteLibraryVariableSetSpaces(params *DeleteLibraryVariableSetSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*DeleteLibraryVariableSetSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteLibraryVariableSetSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "deleteLibraryVariableSet_Spaces",
		Method:             "DELETE",
		PathPattern:        "/api/{baseSpaceId}/libraryvariablesets/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteLibraryVariableSetSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteLibraryVariableSetSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteLibraryVariableSet_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLibraryVariableSetByID gets a library variable set resource by ID

  Gets a single library variable set by ID
*/
func (a *Client) GetLibraryVariableSetByID(params *GetLibraryVariableSetByIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetLibraryVariableSetByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLibraryVariableSetByIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getLibraryVariableSetById",
		Method:             "GET",
		PathPattern:        "/api/libraryvariablesets/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetLibraryVariableSetByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLibraryVariableSetByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getLibraryVariableSetById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLibraryVariableSetByIDSpaces gets a library variable set resource by ID

  Gets a single library variable set by ID
*/
func (a *Client) GetLibraryVariableSetByIDSpaces(params *GetLibraryVariableSetByIDSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLibraryVariableSetByIDSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLibraryVariableSetByIDSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getLibraryVariableSetById_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/libraryvariablesets/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetLibraryVariableSetByIDSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLibraryVariableSetByIDSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getLibraryVariableSetById_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLibraryVariableSetUsageList Lists projects and deployments which are using an library variable set.
*/
func (a *Client) GetLibraryVariableSetUsageList(params *GetLibraryVariableSetUsageListParams, authInfo runtime.ClientAuthInfoWriter) (*GetLibraryVariableSetUsageListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLibraryVariableSetUsageListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getLibraryVariableSetUsageList",
		Method:             "GET",
		PathPattern:        "/api/libraryvariablesets/{id}/usages",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetLibraryVariableSetUsageListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLibraryVariableSetUsageListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getLibraryVariableSetUsageList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetLibraryVariableSetUsageListSpaces Lists projects and deployments which are using an library variable set.
*/
func (a *Client) GetLibraryVariableSetUsageListSpaces(params *GetLibraryVariableSetUsageListSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*GetLibraryVariableSetUsageListSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLibraryVariableSetUsageListSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getLibraryVariableSetUsageList_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/libraryvariablesets/{id}/usages",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetLibraryVariableSetUsageListSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLibraryVariableSetUsageListSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getLibraryVariableSetUsageList_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  IndexLibraryVariableSets gets a list of library variable set resources

  Lists all of the library variable sets in the supplied Octopus Deploy Space. The results will be sorted alphabetically by name.
*/
func (a *Client) IndexLibraryVariableSets(params *IndexLibraryVariableSetsParams, authInfo runtime.ClientAuthInfoWriter) (*IndexLibraryVariableSetsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewIndexLibraryVariableSetsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "indexLibraryVariableSets",
		Method:             "GET",
		PathPattern:        "/api/libraryvariablesets",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &IndexLibraryVariableSetsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*IndexLibraryVariableSetsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for indexLibraryVariableSets: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  IndexLibraryVariableSetsSpaces gets a list of library variable set resources

  Lists all of the library variable sets in the supplied Octopus Deploy Space. The results will be sorted alphabetically by name.
*/
func (a *Client) IndexLibraryVariableSetsSpaces(params *IndexLibraryVariableSetsSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*IndexLibraryVariableSetsSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewIndexLibraryVariableSetsSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "indexLibraryVariableSets_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/libraryvariablesets",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &IndexLibraryVariableSetsSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*IndexLibraryVariableSetsSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for indexLibraryVariableSets_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListAllLibraryVariableSets gets a list of library variable set resources

  Lists all the library variable sets in the supplied Octopus Deploy Space. The results will be sorted alphabetically by name.
*/
func (a *Client) ListAllLibraryVariableSets(params *ListAllLibraryVariableSetsParams, authInfo runtime.ClientAuthInfoWriter) (*ListAllLibraryVariableSetsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAllLibraryVariableSetsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listAllLibraryVariableSets",
		Method:             "GET",
		PathPattern:        "/api/libraryvariablesets/all",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAllLibraryVariableSetsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAllLibraryVariableSetsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listAllLibraryVariableSets: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  ListAllLibraryVariableSetsSpaces gets a list of library variable set resources

  Lists all the library variable sets in the supplied Octopus Deploy Space. The results will be sorted alphabetically by name.
*/
func (a *Client) ListAllLibraryVariableSetsSpaces(params *ListAllLibraryVariableSetsSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*ListAllLibraryVariableSetsSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListAllLibraryVariableSetsSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listAllLibraryVariableSets_Spaces",
		Method:             "GET",
		PathPattern:        "/api/{baseSpaceId}/libraryvariablesets/all",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListAllLibraryVariableSetsSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListAllLibraryVariableSetsSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listAllLibraryVariableSets_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateLibraryVariableSet modifies a library variable set resource by ID

  Modifies an existing library variable set.
*/
func (a *Client) UpdateLibraryVariableSet(params *UpdateLibraryVariableSetParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateLibraryVariableSetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateLibraryVariableSetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateLibraryVariableSet",
		Method:             "PUT",
		PathPattern:        "/api/libraryvariablesets/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateLibraryVariableSetReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateLibraryVariableSetOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateLibraryVariableSet: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateLibraryVariableSetSpaces modifies a library variable set resource by ID

  Modifies an existing library variable set.
*/
func (a *Client) UpdateLibraryVariableSetSpaces(params *UpdateLibraryVariableSetSpacesParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateLibraryVariableSetSpacesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateLibraryVariableSetSpacesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateLibraryVariableSet_Spaces",
		Method:             "PUT",
		PathPattern:        "/api/{baseSpaceId}/libraryvariablesets/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateLibraryVariableSetSpacesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateLibraryVariableSetSpacesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateLibraryVariableSet_Spaces: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
