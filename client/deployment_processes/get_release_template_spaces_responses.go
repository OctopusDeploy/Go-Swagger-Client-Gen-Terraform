// Code generated by go-swagger; DO NOT EDIT.

package deployment_processes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// GetReleaseTemplateSpacesReader is a Reader for the GetReleaseTemplateSpaces structure.
type GetReleaseTemplateSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReleaseTemplateSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReleaseTemplateSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetReleaseTemplateSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReleaseTemplateSpacesOK creates a GetReleaseTemplateSpacesOK with default headers values
func NewGetReleaseTemplateSpacesOK() *GetReleaseTemplateSpacesOK {
	return &GetReleaseTemplateSpacesOK{}
}

/*GetReleaseTemplateSpacesOK handles this case with default header values.

ReleaseTemplateResource resource returned
*/
type GetReleaseTemplateSpacesOK struct {
	Payload *models.ReleaseTemplateResource
}

func (o *GetReleaseTemplateSpacesOK) Error() string {
	return fmt.Sprintf("[GET /api/{baseSpaceId}/deploymentprocesses/{id}/template][%d] getReleaseTemplateSpacesOK  %+v", 200, o.Payload)
}

func (o *GetReleaseTemplateSpacesOK) GetPayload() *models.ReleaseTemplateResource {
	return o.Payload
}

func (o *GetReleaseTemplateSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReleaseTemplateResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleaseTemplateSpacesBadRequest creates a GetReleaseTemplateSpacesBadRequest with default headers values
func NewGetReleaseTemplateSpacesBadRequest() *GetReleaseTemplateSpacesBadRequest {
	return &GetReleaseTemplateSpacesBadRequest{}
}

/*GetReleaseTemplateSpacesBadRequest handles this case with default header values.

A channelId must be provided when more than one exists for that project and no default channel has been specified.
No id parameter was provided.
*/
type GetReleaseTemplateSpacesBadRequest struct {
}

func (o *GetReleaseTemplateSpacesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/{baseSpaceId}/deploymentprocesses/{id}/template][%d] getReleaseTemplateSpacesBadRequest ", 400)
}

func (o *GetReleaseTemplateSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
