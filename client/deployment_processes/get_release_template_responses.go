// Code generated by go-swagger; DO NOT EDIT.

package deployment_processes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// GetReleaseTemplateReader is a Reader for the GetReleaseTemplate structure.
type GetReleaseTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReleaseTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReleaseTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetReleaseTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReleaseTemplateOK creates a GetReleaseTemplateOK with default headers values
func NewGetReleaseTemplateOK() *GetReleaseTemplateOK {
	return &GetReleaseTemplateOK{}
}

/*GetReleaseTemplateOK handles this case with default header values.

ReleaseTemplateResource resource returned
*/
type GetReleaseTemplateOK struct {
	Payload *models.ReleaseTemplateResource
}

func (o *GetReleaseTemplateOK) Error() string {
	return fmt.Sprintf("[GET /api/deploymentprocesses/{id}/template][%d] getReleaseTemplateOK  %+v", 200, o.Payload)
}

func (o *GetReleaseTemplateOK) GetPayload() *models.ReleaseTemplateResource {
	return o.Payload
}

func (o *GetReleaseTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReleaseTemplateResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleaseTemplateBadRequest creates a GetReleaseTemplateBadRequest with default headers values
func NewGetReleaseTemplateBadRequest() *GetReleaseTemplateBadRequest {
	return &GetReleaseTemplateBadRequest{}
}

/*GetReleaseTemplateBadRequest handles this case with default header values.

A channelId must be provided when more than one exists for that project and no default channel has been specified.
No id parameter was provided.
*/
type GetReleaseTemplateBadRequest struct {
}

func (o *GetReleaseTemplateBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/deploymentprocesses/{id}/template][%d] getReleaseTemplateBadRequest ", 400)
}

func (o *GetReleaseTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
