// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// CreateProjectReader is a Reader for the CreateProject structure.
type CreateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateProjectCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateProjectCreated creates a CreateProjectCreated with default headers values
func NewCreateProjectCreated() *CreateProjectCreated {
	return &CreateProjectCreated{}
}

/*CreateProjectCreated handles this case with default header values.

ProjectResource Created
*/
type CreateProjectCreated struct {
	Payload *models.ProjectResource
}

func (o *CreateProjectCreated) Error() string {
	return fmt.Sprintf("[POST /api/projects][%d] createProjectCreated  %+v", 201, o.Payload)
}

func (o *CreateProjectCreated) GetPayload() *models.ProjectResource {
	return o.Payload
}

func (o *CreateProjectCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProjectResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectBadRequest creates a CreateProjectBadRequest with default headers values
func NewCreateProjectBadRequest() *CreateProjectBadRequest {
	return &CreateProjectBadRequest{}
}

/*CreateProjectBadRequest handles this case with default header values.

A channel ID must be provided to enable Automatic Release Creation.
A package step must be provided to enable Automatic Release Creation.
A project cannot be named '{0}'
Model validation failed.
No request body was supplied.
Only one of either a donor package step or a version template may be provided.
The Automatic Release Creation (ARC) package must be sourced from the Octopus built-in feed. ARC settings can be found at Project > Triggers https://g.octopushq.com/AutoReleaseCreation
The Automatic Release Creation package could not be found (see Automatic Release Creation settings, via Project > Triggers)
The package step provided could not be found in the project's deployment process (see Automatic Release Creation settings, via Project > Triggers).
The package step provided is disabled (see Automatic Release Creation settings, via Project > Triggers).
The specified Automatic Release Creation channel belongs to a different project.
*/
type CreateProjectBadRequest struct {
}

func (o *CreateProjectBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/projects][%d] createProjectBadRequest ", 400)
}

func (o *CreateProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
