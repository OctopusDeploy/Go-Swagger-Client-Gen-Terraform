// Code generated by go-swagger; DO NOT EDIT.

package configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new configuration API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for configuration API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetConfigurationItemMetadata(params *GetConfigurationItemMetadataParams, authInfo runtime.ClientAuthInfoWriter) (*GetConfigurationItemMetadataOK, error)

	GetConfigurationItemValues(params *GetConfigurationItemValuesParams, authInfo runtime.ClientAuthInfoWriter) (*GetConfigurationItemValuesOK, error)

	GetConfigurationSectionList(params *GetConfigurationSectionListParams, authInfo runtime.ClientAuthInfoWriter) (*GetConfigurationSectionListOK, error)

	GetConfigurationSectionMetadata(params *GetConfigurationSectionMetadataParams, authInfo runtime.ClientAuthInfoWriter) (*GetConfigurationSectionMetadataOK, error)

	UpdateConfigurationItem(params *UpdateConfigurationItemParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateConfigurationItemOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetConfigurationItemMetadata Returns a structure that describes how to dynamically render the configuration section
*/
func (a *Client) GetConfigurationItemMetadata(params *GetConfigurationItemMetadataParams, authInfo runtime.ClientAuthInfoWriter) (*GetConfigurationItemMetadataOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetConfigurationItemMetadataParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getConfigurationItemMetadata",
		Method:             "GET",
		PathPattern:        "/api/configuration/{id}/metadata",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetConfigurationItemMetadataReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetConfigurationItemMetadataOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getConfigurationItemMetadata: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetConfigurationItemValues Returns the current configuration for a specific configuration section
*/
func (a *Client) GetConfigurationItemValues(params *GetConfigurationItemValuesParams, authInfo runtime.ClientAuthInfoWriter) (*GetConfigurationItemValuesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetConfigurationItemValuesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getConfigurationItemValues",
		Method:             "GET",
		PathPattern:        "/api/configuration/{id}/values",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetConfigurationItemValuesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetConfigurationItemValuesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getConfigurationItemValues: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetConfigurationSectionList Returns a list of configuration section settings
*/
func (a *Client) GetConfigurationSectionList(params *GetConfigurationSectionListParams, authInfo runtime.ClientAuthInfoWriter) (*GetConfigurationSectionListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetConfigurationSectionListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getConfigurationSectionList",
		Method:             "GET",
		PathPattern:        "/api/configuration",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetConfigurationSectionListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetConfigurationSectionListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getConfigurationSectionList: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetConfigurationSectionMetadata Returns a single configuration section for the given id
*/
func (a *Client) GetConfigurationSectionMetadata(params *GetConfigurationSectionMetadataParams, authInfo runtime.ClientAuthInfoWriter) (*GetConfigurationSectionMetadataOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetConfigurationSectionMetadataParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getConfigurationSectionMetadata",
		Method:             "GET",
		PathPattern:        "/api/configuration/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetConfigurationSectionMetadataReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetConfigurationSectionMetadataOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getConfigurationSectionMetadata: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateConfigurationItem Updates the configuration values for a specific configuration section
*/
func (a *Client) UpdateConfigurationItem(params *UpdateConfigurationItemParams, authInfo runtime.ClientAuthInfoWriter) (*UpdateConfigurationItemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateConfigurationItemParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "updateConfigurationItem",
		Method:             "PUT",
		PathPattern:        "/api/configuration/{id}/values",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateConfigurationItemReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateConfigurationItemOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateConfigurationItem: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
