// Code generated by go-swagger; DO NOT EDIT.

package build_information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"models"
)

// CreateBuildInformationReader is a Reader for the CreateBuildInformation structure.
type CreateBuildInformationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBuildInformationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateBuildInformationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBuildInformationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateBuildInformationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateBuildInformationOK creates a CreateBuildInformationOK with default headers values
func NewCreateBuildInformationOK() *CreateBuildInformationOK {
	return &CreateBuildInformationOK{}
}

/*CreateBuildInformationOK handles this case with default header values.

OctopusPackageVersionBuildInformationMappedResource resource returned
*/
type CreateBuildInformationOK struct {
	Payload *models.OctopusPackageVersionBuildInformationMappedResource
}

func (o *CreateBuildInformationOK) Error() string {
	return fmt.Sprintf("[POST /api/build-information][%d] createBuildInformationOK  %+v", 200, o.Payload)
}

func (o *CreateBuildInformationOK) GetPayload() *models.OctopusPackageVersionBuildInformationMappedResource {
	return o.Payload
}

func (o *CreateBuildInformationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OctopusPackageVersionBuildInformationMappedResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBuildInformationBadRequest creates a CreateBuildInformationBadRequest with default headers values
func NewCreateBuildInformationBadRequest() *CreateBuildInformationBadRequest {
	return &CreateBuildInformationBadRequest{}
}

/*CreateBuildInformationBadRequest handles this case with default header values.

Invalid package metadata
The package ID contains invalid characters. Examples of valid package IDs include 'MyPackage' and 'MyPackage.Sample'.
The version is invalid. Please supply a valid semver version number.
*/
type CreateBuildInformationBadRequest struct {
}

func (o *CreateBuildInformationBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/build-information][%d] createBuildInformationBadRequest ", 400)
}

func (o *CreateBuildInformationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateBuildInformationConflict creates a CreateBuildInformationConflict with default headers values
func NewCreateBuildInformationConflict() *CreateBuildInformationConflict {
	return &CreateBuildInformationConflict{}
}

/*CreateBuildInformationConflict handles this case with default header values.

Metadata for the specified Package ID and version already exists. To proceed anyway, specify an overwriteMode of OverwriteExisting or IgnoreIfExists.
*/
type CreateBuildInformationConflict struct {
}

func (o *CreateBuildInformationConflict) Error() string {
	return fmt.Sprintf("[POST /api/build-information][%d] createBuildInformationConflict ", 409)
}

func (o *CreateBuildInformationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
