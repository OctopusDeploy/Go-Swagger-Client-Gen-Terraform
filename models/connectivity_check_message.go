// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConnectivityCheckMessage connectivity check message
//
// swagger:model ConnectivityCheckMessage
type ConnectivityCheckMessage struct {

	// category
	// Read Only: true
	// Enum: [Error Info Warning]
	Category string `json:"Category,omitempty"`

	// message
	// Read Only: true
	Message string `json:"Message,omitempty"`
}

// Validate validates this connectivity check message
func (m *ConnectivityCheckMessage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var connectivityCheckMessageTypeCategoryPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Error","Info","Warning"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		connectivityCheckMessageTypeCategoryPropEnum = append(connectivityCheckMessageTypeCategoryPropEnum, v)
	}
}

const (

	// ConnectivityCheckMessageCategoryError captures enum value "Error"
	ConnectivityCheckMessageCategoryError string = "Error"

	// ConnectivityCheckMessageCategoryInfo captures enum value "Info"
	ConnectivityCheckMessageCategoryInfo string = "Info"

	// ConnectivityCheckMessageCategoryWarning captures enum value "Warning"
	ConnectivityCheckMessageCategoryWarning string = "Warning"
)

// prop value enum
func (m *ConnectivityCheckMessage) validateCategoryEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, connectivityCheckMessageTypeCategoryPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ConnectivityCheckMessage) validateCategory(formats strfmt.Registry) error {

	if swag.IsZero(m.Category) { // not required
		return nil
	}

	// value enum
	if err := m.validateCategoryEnum("Category", "body", m.Category); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ConnectivityCheckMessage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConnectivityCheckMessage) UnmarshalBinary(b []byte) error {
	var res ConnectivityCheckMessage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
