// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MachineDeploymentPreview machine deployment preview
//
// swagger:model MachineDeploymentPreview
type MachineDeploymentPreview struct {

	// has latest calamari
	HasLatestCalamari bool `json:"HasLatestCalamari,omitempty"`

	// health status
	// Enum: [HasWarnings Healthy Unavailable Unhealthy]
	HealthStatus string `json:"HealthStatus,omitempty"`

	// Id
	ID string `json:"Id,omitempty"`

	// name
	Name string `json:"Name,omitempty"`
}

// Validate validates this machine deployment preview
func (m *MachineDeploymentPreview) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHealthStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var machineDeploymentPreviewTypeHealthStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["HasWarnings","Healthy","Unavailable","Unhealthy"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		machineDeploymentPreviewTypeHealthStatusPropEnum = append(machineDeploymentPreviewTypeHealthStatusPropEnum, v)
	}
}

const (

	// MachineDeploymentPreviewHealthStatusHasWarnings captures enum value "HasWarnings"
	MachineDeploymentPreviewHealthStatusHasWarnings string = "HasWarnings"

	// MachineDeploymentPreviewHealthStatusHealthy captures enum value "Healthy"
	MachineDeploymentPreviewHealthStatusHealthy string = "Healthy"

	// MachineDeploymentPreviewHealthStatusUnavailable captures enum value "Unavailable"
	MachineDeploymentPreviewHealthStatusUnavailable string = "Unavailable"

	// MachineDeploymentPreviewHealthStatusUnhealthy captures enum value "Unhealthy"
	MachineDeploymentPreviewHealthStatusUnhealthy string = "Unhealthy"
)

// prop value enum
func (m *MachineDeploymentPreview) validateHealthStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, machineDeploymentPreviewTypeHealthStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MachineDeploymentPreview) validateHealthStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.HealthStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateHealthStatusEnum("HealthStatus", "body", m.HealthStatus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MachineDeploymentPreview) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MachineDeploymentPreview) UnmarshalBinary(b []byte) error {
	var res MachineDeploymentPreview
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
