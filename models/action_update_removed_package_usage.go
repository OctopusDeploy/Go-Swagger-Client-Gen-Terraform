// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ActionUpdateRemovedPackageUsage action update removed package usage
//
// swagger:model ActionUpdateRemovedPackageUsage
type ActionUpdateRemovedPackageUsage struct {

	// package reference
	// Read Only: true
	PackageReference string `json:"PackageReference,omitempty"`

	// used by
	// Read Only: true
	// Enum: [ChannelRule ProjectReleaseCreationStrategy ProjectVersionStrategy]
	UsedBy string `json:"UsedBy,omitempty"`

	// used by Id
	// Read Only: true
	UsedByID string `json:"UsedById,omitempty"`

	// used by name
	// Read Only: true
	UsedByName string `json:"UsedByName,omitempty"`
}

// Validate validates this action update removed package usage
func (m *ActionUpdateRemovedPackageUsage) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUsedBy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var actionUpdateRemovedPackageUsageTypeUsedByPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ChannelRule","ProjectReleaseCreationStrategy","ProjectVersionStrategy"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		actionUpdateRemovedPackageUsageTypeUsedByPropEnum = append(actionUpdateRemovedPackageUsageTypeUsedByPropEnum, v)
	}
}

const (

	// ActionUpdateRemovedPackageUsageUsedByChannelRule captures enum value "ChannelRule"
	ActionUpdateRemovedPackageUsageUsedByChannelRule string = "ChannelRule"

	// ActionUpdateRemovedPackageUsageUsedByProjectReleaseCreationStrategy captures enum value "ProjectReleaseCreationStrategy"
	ActionUpdateRemovedPackageUsageUsedByProjectReleaseCreationStrategy string = "ProjectReleaseCreationStrategy"

	// ActionUpdateRemovedPackageUsageUsedByProjectVersionStrategy captures enum value "ProjectVersionStrategy"
	ActionUpdateRemovedPackageUsageUsedByProjectVersionStrategy string = "ProjectVersionStrategy"
)

// prop value enum
func (m *ActionUpdateRemovedPackageUsage) validateUsedByEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, actionUpdateRemovedPackageUsageTypeUsedByPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ActionUpdateRemovedPackageUsage) validateUsedBy(formats strfmt.Registry) error {

	if swag.IsZero(m.UsedBy) { // not required
		return nil
	}

	// value enum
	if err := m.validateUsedByEnum("UsedBy", "body", m.UsedBy); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ActionUpdateRemovedPackageUsage) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActionUpdateRemovedPackageUsage) UnmarshalBinary(b []byte) error {
	var res ActionUpdateRemovedPackageUsage
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
