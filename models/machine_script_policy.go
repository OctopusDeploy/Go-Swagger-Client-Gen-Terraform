// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MachineScriptPolicy machine script policy
//
// swagger:model MachineScriptPolicy
type MachineScriptPolicy struct {

	// run type
	// Enum: [InheritFromDefault Inline OnlyConnectivity]
	RunType string `json:"RunType,omitempty"`

	// script body
	ScriptBody string `json:"ScriptBody,omitempty"`
}

// Validate validates this machine script policy
func (m *MachineScriptPolicy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRunType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var machineScriptPolicyTypeRunTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["InheritFromDefault","Inline","OnlyConnectivity"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		machineScriptPolicyTypeRunTypePropEnum = append(machineScriptPolicyTypeRunTypePropEnum, v)
	}
}

const (

	// MachineScriptPolicyRunTypeInheritFromDefault captures enum value "InheritFromDefault"
	MachineScriptPolicyRunTypeInheritFromDefault string = "InheritFromDefault"

	// MachineScriptPolicyRunTypeInline captures enum value "Inline"
	MachineScriptPolicyRunTypeInline string = "Inline"

	// MachineScriptPolicyRunTypeOnlyConnectivity captures enum value "OnlyConnectivity"
	MachineScriptPolicyRunTypeOnlyConnectivity string = "OnlyConnectivity"
)

// prop value enum
func (m *MachineScriptPolicy) validateRunTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, machineScriptPolicyTypeRunTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *MachineScriptPolicy) validateRunType(formats strfmt.Registry) error {

	if swag.IsZero(m.RunType) { // not required
		return nil
	}

	// value enum
	if err := m.validateRunTypeEnum("RunType", "body", m.RunType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MachineScriptPolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MachineScriptPolicy) UnmarshalBinary(b []byte) error {
	var res MachineScriptPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
