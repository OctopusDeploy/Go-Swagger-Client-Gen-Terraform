// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProcessReferenceDataItem process reference data item
//
// swagger:model ProcessReferenceDataItem
type ProcessReferenceDataItem struct {

	// Id
	ID string `json:"Id,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// process type
	// Enum: [Deployment Runbook]
	ProcessType string `json:"ProcessType,omitempty"`
}

// Validate validates this process reference data item
func (m *ProcessReferenceDataItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProcessType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var processReferenceDataItemTypeProcessTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Deployment","Runbook"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		processReferenceDataItemTypeProcessTypePropEnum = append(processReferenceDataItemTypeProcessTypePropEnum, v)
	}
}

const (

	// ProcessReferenceDataItemProcessTypeDeployment captures enum value "Deployment"
	ProcessReferenceDataItemProcessTypeDeployment string = "Deployment"

	// ProcessReferenceDataItemProcessTypeRunbook captures enum value "Runbook"
	ProcessReferenceDataItemProcessTypeRunbook string = "Runbook"
)

// prop value enum
func (m *ProcessReferenceDataItem) validateProcessTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, processReferenceDataItemTypeProcessTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ProcessReferenceDataItem) validateProcessType(formats strfmt.Registry) error {

	if swag.IsZero(m.ProcessType) { // not required
		return nil
	}

	// value enum
	if err := m.validateProcessTypeEnum("ProcessType", "body", m.ProcessType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProcessReferenceDataItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProcessReferenceDataItem) UnmarshalBinary(b []byte) error {
	var res ProcessReferenceDataItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
