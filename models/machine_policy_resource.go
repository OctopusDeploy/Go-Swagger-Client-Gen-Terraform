// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MachinePolicyResource machine policy resource
//
// swagger:model MachinePolicyResource
type MachinePolicyResource struct {

	// connection connect timeout
	ConnectionConnectTimeout string `json:"ConnectionConnectTimeout,omitempty"`

	// connection retry count limit
	ConnectionRetryCountLimit int32 `json:"ConnectionRetryCountLimit,omitempty"`

	// connection retry sleep interval
	ConnectionRetrySleepInterval string `json:"ConnectionRetrySleepInterval,omitempty"`

	// connection retry time limit
	ConnectionRetryTimeLimit string `json:"ConnectionRetryTimeLimit,omitempty"`

	// description
	Description string `json:"Description,omitempty"`

	// Id
	ID string `json:"Id,omitempty"`

	// is default
	IsDefault bool `json:"IsDefault,omitempty"`

	// last modified by
	LastModifiedBy string `json:"LastModifiedBy,omitempty"`

	// last modified on
	// Format: date-time
	LastModifiedOn strfmt.DateTime `json:"LastModifiedOn,omitempty"`

	// links
	Links map[string]string `json:"Links,omitempty"`

	// machine cleanup policy
	MachineCleanupPolicy *MachineCleanupPolicy `json:"MachineCleanupPolicy,omitempty"`

	// machine connectivity policy
	MachineConnectivityPolicy *MachineConnectivityPolicy `json:"MachineConnectivityPolicy,omitempty"`

	// machine health check policy
	MachineHealthCheckPolicy *MachineHealthCheckPolicy `json:"MachineHealthCheckPolicy,omitempty"`

	// machine update policy
	MachineUpdatePolicy *MachineUpdatePolicy `json:"MachineUpdatePolicy,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// polling request maximum message processing timeout
	PollingRequestMaximumMessageProcessingTimeout string `json:"PollingRequestMaximumMessageProcessingTimeout,omitempty"`

	// polling request queue timeout
	PollingRequestQueueTimeout string `json:"PollingRequestQueueTimeout,omitempty"`

	// space Id
	SpaceID string `json:"SpaceId,omitempty"`
}

// Validate validates this machine policy resource
func (m *MachinePolicyResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastModifiedOn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMachineCleanupPolicy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMachineConnectivityPolicy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMachineHealthCheckPolicy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMachineUpdatePolicy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MachinePolicyResource) validateLastModifiedOn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModifiedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("LastModifiedOn", "body", "date-time", m.LastModifiedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *MachinePolicyResource) validateMachineCleanupPolicy(formats strfmt.Registry) error {

	if swag.IsZero(m.MachineCleanupPolicy) { // not required
		return nil
	}

	if m.MachineCleanupPolicy != nil {
		if err := m.MachineCleanupPolicy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("MachineCleanupPolicy")
			}
			return err
		}
	}

	return nil
}

func (m *MachinePolicyResource) validateMachineConnectivityPolicy(formats strfmt.Registry) error {

	if swag.IsZero(m.MachineConnectivityPolicy) { // not required
		return nil
	}

	if m.MachineConnectivityPolicy != nil {
		if err := m.MachineConnectivityPolicy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("MachineConnectivityPolicy")
			}
			return err
		}
	}

	return nil
}

func (m *MachinePolicyResource) validateMachineHealthCheckPolicy(formats strfmt.Registry) error {

	if swag.IsZero(m.MachineHealthCheckPolicy) { // not required
		return nil
	}

	if m.MachineHealthCheckPolicy != nil {
		if err := m.MachineHealthCheckPolicy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("MachineHealthCheckPolicy")
			}
			return err
		}
	}

	return nil
}

func (m *MachinePolicyResource) validateMachineUpdatePolicy(formats strfmt.Registry) error {

	if swag.IsZero(m.MachineUpdatePolicy) { // not required
		return nil
	}

	if m.MachineUpdatePolicy != nil {
		if err := m.MachineUpdatePolicy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("MachineUpdatePolicy")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MachinePolicyResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MachinePolicyResource) UnmarshalBinary(b []byte) error {
	var res MachinePolicyResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
