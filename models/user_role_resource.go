// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserRoleResource user role resource
//
// swagger:model UserRoleResource
type UserRoleResource struct {

	// can be deleted
	CanBeDeleted bool `json:"CanBeDeleted,omitempty"`

	// description
	Description string `json:"Description,omitempty"`

	// granted space permissions
	GrantedSpacePermissions []string `json:"GrantedSpacePermissions"`

	// granted system permissions
	GrantedSystemPermissions []string `json:"GrantedSystemPermissions"`

	// Id
	ID string `json:"Id,omitempty"`

	// last modified by
	LastModifiedBy string `json:"LastModifiedBy,omitempty"`

	// last modified on
	// Format: date-time
	LastModifiedOn strfmt.DateTime `json:"LastModifiedOn,omitempty"`

	// links
	Links map[string]string `json:"Links,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// space permission descriptions
	SpacePermissionDescriptions []string `json:"SpacePermissionDescriptions"`

	// supported restrictions
	SupportedRestrictions []string `json:"SupportedRestrictions"`

	// system permission descriptions
	SystemPermissionDescriptions []string `json:"SystemPermissionDescriptions"`
}

// Validate validates this user role resource
func (m *UserRoleResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGrantedSpacePermissions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGrantedSystemPermissions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastModifiedOn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var userRoleResourceGrantedSpacePermissionsItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AccountCreate","AccountDelete","AccountEdit","AccountView","ActionTemplateCreate","ActionTemplateDelete","ActionTemplateEdit","ActionTemplateView","AdministerSystem","ArtifactCreate","ArtifactDelete","ArtifactEdit","ArtifactView","BuildInformationAdminister","BuildInformationPush","BuiltInFeedAdminister","BuiltInFeedDownload","BuiltInFeedPush","CertificateCreate","CertificateDelete","CertificateEdit","CertificateExportPrivateKey","CertificateView","ConfigureServer","DefectReport","DefectResolve","DeploymentCreate","DeploymentDelete","DeploymentView","EnvironmentCreate","EnvironmentDelete","EnvironmentEdit","EnvironmentView","EventView","FeedEdit","FeedView","InterruptionSubmit","InterruptionView","InterruptionViewSubmitResponsible","LibraryVariableSetCreate","LibraryVariableSetDelete","LibraryVariableSetEdit","LibraryVariableSetView","LifecycleCreate","LifecycleDelete","LifecycleEdit","LifecycleView","MachineCreate","MachineDelete","MachineEdit","MachinePolicyCreate","MachinePolicyDelete","MachinePolicyEdit","MachinePolicyView","MachineView","ProcessEdit","ProcessView","ProjectCreate","ProjectDelete","ProjectEdit","ProjectGroupCreate","ProjectGroupDelete","ProjectGroupEdit","ProjectGroupView","ProjectView","ProxyCreate","ProxyDelete","ProxyEdit","ProxyView","ReleaseCreate","ReleaseDelete","ReleaseEdit","ReleaseView","RunbookEdit","RunbookRunCreate","RunbookRunDelete","RunbookRunView","RunbookView","SpaceCreate","SpaceDelete","SpaceEdit","SpaceView","SubscriptionCreate","SubscriptionDelete","SubscriptionEdit","SubscriptionView","TagSetCreate","TagSetDelete","TagSetEdit","TaskCancel","TaskCreate","TaskEdit","TaskView","TeamCreate","TeamDelete","TeamEdit","TeamView","TenantCreate","TenantDelete","TenantEdit","TenantView","TriggerCreate","TriggerDelete","TriggerEdit","TriggerView","UserEdit","UserInvite","UserRoleEdit","UserRoleView","UserView","VariableEdit","VariableEditUnscoped","VariableView","VariableViewUnscoped","WorkerEdit","WorkerView"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		userRoleResourceGrantedSpacePermissionsItemsEnum = append(userRoleResourceGrantedSpacePermissionsItemsEnum, v)
	}
}

func (m *UserRoleResource) validateGrantedSpacePermissionsItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, userRoleResourceGrantedSpacePermissionsItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UserRoleResource) validateGrantedSpacePermissions(formats strfmt.Registry) error {

	if swag.IsZero(m.GrantedSpacePermissions) { // not required
		return nil
	}

	for i := 0; i < len(m.GrantedSpacePermissions); i++ {

		// value enum
		if err := m.validateGrantedSpacePermissionsItemsEnum("GrantedSpacePermissions"+"."+strconv.Itoa(i), "body", m.GrantedSpacePermissions[i]); err != nil {
			return err
		}

	}

	return nil
}

var userRoleResourceGrantedSystemPermissionsItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AccountCreate","AccountDelete","AccountEdit","AccountView","ActionTemplateCreate","ActionTemplateDelete","ActionTemplateEdit","ActionTemplateView","AdministerSystem","ArtifactCreate","ArtifactDelete","ArtifactEdit","ArtifactView","BuildInformationAdminister","BuildInformationPush","BuiltInFeedAdminister","BuiltInFeedDownload","BuiltInFeedPush","CertificateCreate","CertificateDelete","CertificateEdit","CertificateExportPrivateKey","CertificateView","ConfigureServer","DefectReport","DefectResolve","DeploymentCreate","DeploymentDelete","DeploymentView","EnvironmentCreate","EnvironmentDelete","EnvironmentEdit","EnvironmentView","EventView","FeedEdit","FeedView","InterruptionSubmit","InterruptionView","InterruptionViewSubmitResponsible","LibraryVariableSetCreate","LibraryVariableSetDelete","LibraryVariableSetEdit","LibraryVariableSetView","LifecycleCreate","LifecycleDelete","LifecycleEdit","LifecycleView","MachineCreate","MachineDelete","MachineEdit","MachinePolicyCreate","MachinePolicyDelete","MachinePolicyEdit","MachinePolicyView","MachineView","ProcessEdit","ProcessView","ProjectCreate","ProjectDelete","ProjectEdit","ProjectGroupCreate","ProjectGroupDelete","ProjectGroupEdit","ProjectGroupView","ProjectView","ProxyCreate","ProxyDelete","ProxyEdit","ProxyView","ReleaseCreate","ReleaseDelete","ReleaseEdit","ReleaseView","RunbookEdit","RunbookRunCreate","RunbookRunDelete","RunbookRunView","RunbookView","SpaceCreate","SpaceDelete","SpaceEdit","SpaceView","SubscriptionCreate","SubscriptionDelete","SubscriptionEdit","SubscriptionView","TagSetCreate","TagSetDelete","TagSetEdit","TaskCancel","TaskCreate","TaskEdit","TaskView","TeamCreate","TeamDelete","TeamEdit","TeamView","TenantCreate","TenantDelete","TenantEdit","TenantView","TriggerCreate","TriggerDelete","TriggerEdit","TriggerView","UserEdit","UserInvite","UserRoleEdit","UserRoleView","UserView","VariableEdit","VariableEditUnscoped","VariableView","VariableViewUnscoped","WorkerEdit","WorkerView"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		userRoleResourceGrantedSystemPermissionsItemsEnum = append(userRoleResourceGrantedSystemPermissionsItemsEnum, v)
	}
}

func (m *UserRoleResource) validateGrantedSystemPermissionsItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, userRoleResourceGrantedSystemPermissionsItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *UserRoleResource) validateGrantedSystemPermissions(formats strfmt.Registry) error {

	if swag.IsZero(m.GrantedSystemPermissions) { // not required
		return nil
	}

	for i := 0; i < len(m.GrantedSystemPermissions); i++ {

		// value enum
		if err := m.validateGrantedSystemPermissionsItemsEnum("GrantedSystemPermissions"+"."+strconv.Itoa(i), "body", m.GrantedSystemPermissions[i]); err != nil {
			return err
		}

	}

	return nil
}

func (m *UserRoleResource) validateLastModifiedOn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModifiedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("LastModifiedOn", "body", "date-time", m.LastModifiedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserRoleResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserRoleResource) UnmarshalBinary(b []byte) error {
	var res UserRoleResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
