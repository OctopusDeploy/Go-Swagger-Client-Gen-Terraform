// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReportDeploymentCountOverTimeResource report deployment count over time resource
//
// swagger:model ReportDeploymentCountOverTimeResource
type ReportDeploymentCountOverTimeResource struct {

	// Id
	ID string `json:"Id,omitempty"`

	// last modified by
	LastModifiedBy string `json:"LastModifiedBy,omitempty"`

	// last modified on
	// Format: date-time
	LastModifiedOn strfmt.DateTime `json:"LastModifiedOn,omitempty"`

	// links
	Links map[string]string `json:"Links,omitempty"`

	// project Id
	ProjectID string `json:"ProjectId,omitempty"`

	// report data
	ReportData *NumericReportData `json:"ReportData,omitempty"`
}

// Validate validates this report deployment count over time resource
func (m *ReportDeploymentCountOverTimeResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastModifiedOn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReportData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReportDeploymentCountOverTimeResource) validateLastModifiedOn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModifiedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("LastModifiedOn", "body", "date-time", m.LastModifiedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ReportDeploymentCountOverTimeResource) validateReportData(formats strfmt.Registry) error {

	if swag.IsZero(m.ReportData) { // not required
		return nil
	}

	if m.ReportData != nil {
		if err := m.ReportData.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ReportData")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReportDeploymentCountOverTimeResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReportDeploymentCountOverTimeResource) UnmarshalBinary(b []byte) error {
	var res ReportDeploymentCountOverTimeResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
