// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WorkerPoolsSummaryResource worker pools summary resource
//
// swagger:model WorkerPoolsSummaryResource
type WorkerPoolsSummaryResource struct {

	// machine endpoint summaries
	MachineEndpointSummaries map[string]int32 `json:"MachineEndpointSummaries,omitempty"`

	// machine health status summaries
	MachineHealthStatusSummaries map[string]int32 `json:"MachineHealthStatusSummaries,omitempty"`

	// machine ids for calamari upgrade
	MachineIdsForCalamariUpgrade []string `json:"MachineIdsForCalamariUpgrade"`

	// machine ids for tentacle upgrade
	MachineIdsForTentacleUpgrade []string `json:"MachineIdsForTentacleUpgrade"`

	// tentacle upgrades required
	TentacleUpgradesRequired bool `json:"TentacleUpgradesRequired,omitempty"`

	// total disabled machines
	TotalDisabledMachines int32 `json:"TotalDisabledMachines,omitempty"`

	// total machines
	TotalMachines int32 `json:"TotalMachines,omitempty"`

	// worker pool summaries
	WorkerPoolSummaries []*WorkerPoolSummaryResource `json:"WorkerPoolSummaries"`
}

// Validate validates this worker pools summary resource
func (m *WorkerPoolsSummaryResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateWorkerPoolSummaries(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WorkerPoolsSummaryResource) validateWorkerPoolSummaries(formats strfmt.Registry) error {

	if swag.IsZero(m.WorkerPoolSummaries) { // not required
		return nil
	}

	for i := 0; i < len(m.WorkerPoolSummaries); i++ {
		if swag.IsZero(m.WorkerPoolSummaries[i]) { // not required
			continue
		}

		if m.WorkerPoolSummaries[i] != nil {
			if err := m.WorkerPoolSummaries[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("WorkerPoolSummaries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *WorkerPoolsSummaryResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkerPoolsSummaryResource) UnmarshalBinary(b []byte) error {
	var res WorkerPoolsSummaryResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
